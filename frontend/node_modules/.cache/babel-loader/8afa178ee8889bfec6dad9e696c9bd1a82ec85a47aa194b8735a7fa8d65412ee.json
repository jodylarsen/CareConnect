{"ast":null,"code":"var _jsxFileName = \"/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/MapView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport './MapView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  userLocation,\n  providers = [],\n  onLocationChange,\n  onProviderSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [userMarker, setUserMarker] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    initializeMap();\n  }, []);\n  useEffect(() => {\n    if (map && userLocation) {\n      updateUserLocation(userLocation);\n    }\n  }, [map, userLocation]);\n  useEffect(() => {\n    if (map) {\n      updateProviderMarkers(providers);\n    }\n  }, [map, providers]);\n  const initializeMap = async () => {\n    try {\n      const loader = new Loader({\n        apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n        version: 'weekly',\n        libraries: ['places', 'geometry']\n      });\n      const google = await loader.load();\n      if (!mapRef.current) return;\n\n      // Default to New York if no user location\n      const defaultLocation = userLocation || {\n        lat: 40.7128,\n        lng: -74.0060\n      };\n      const mapInstance = new google.maps.Map(mapRef.current, {\n        center: defaultLocation,\n        zoom: 13,\n        styles: [{\n          featureType: 'poi.medical',\n          elementType: 'geometry',\n          stylers: [{\n            color: '#ffeaa7'\n          }]\n        }]\n      });\n\n      // Add click listener for location selection\n      mapInstance.addListener('click', event => {\n        if (event.latLng && onLocationChange) {\n          const location = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          };\n\n          // Reverse geocode to get address\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode({\n            location: event.latLng\n          }, (results, status) => {\n            if (status === 'OK' && results && results[0]) {\n              location.address = results[0].formatted_address;\n            }\n            onLocationChange(location);\n          });\n        }\n      });\n      setMap(mapInstance);\n      setLoading(false);\n    } catch (err) {\n      setError(`Failed to initialize map: ${err}`);\n      setLoading(false);\n    }\n  };\n  const updateUserLocation = location => {\n    if (!map) return;\n\n    // Remove existing user marker\n    if (userMarker) {\n      userMarker.setMap(null);\n    }\n\n    // Create new user marker\n    const marker = new google.maps.Marker({\n      position: location,\n      map: map,\n      title: 'Your Location',\n      icon: {\n        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"12\" cy=\"12\" r=\"8\" fill=\"#007bff\" stroke=\"white\" stroke-width=\"2\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"white\"/>\n          </svg>\n        `),\n        scaledSize: new google.maps.Size(24, 24),\n        anchor: new google.maps.Point(12, 12)\n      }\n    });\n    setUserMarker(marker);\n\n    // Center map on user location\n    map.setCenter(location);\n  };\n  const updateProviderMarkers = providers => {\n    if (!map) return;\n\n    // Clear existing markers\n    markers.forEach(marker => marker.setMap(null));\n\n    // Create new markers\n    const newMarkers = providers.map((provider, index) => {\n      const marker = new google.maps.Marker({\n        position: provider.location,\n        map: map,\n        title: provider.name,\n        icon: {\n          url: getProviderIcon(provider.type),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n\n      // Create info window\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div class=\"marker-info\">\n            <h3>${provider.name}</h3>\n            <p><strong>Type:</strong> ${provider.type}</p>\n            <p><strong>Address:</strong> ${provider.address}</p>\n            ${provider.rating ? `<p><strong>Rating:</strong> ${'‚≠ê'.repeat(Math.round(provider.rating))}</p>` : ''}\n            ${provider.distance ? `<p><strong>Distance:</strong> ${provider.distance.toFixed(1)} miles</p>` : ''}\n            <button onclick=\"window.selectProvider('${provider.id}')\" class=\"select-btn\">\n              Select Provider\n            </button>\n          </div>\n        `\n      });\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n      });\n      return marker;\n    });\n    setMarkers(newMarkers);\n\n    // Set up global function for provider selection\n    window.selectProvider = providerId => {\n      const provider = providers.find(p => p.id === providerId);\n      if (provider && onProviderSelect) {\n        onProviderSelect(provider);\n      }\n    };\n\n    // Adjust map bounds to show all markers\n    if (newMarkers.length > 0) {\n      const bounds = new google.maps.LatLngBounds();\n      newMarkers.forEach(marker => {\n        const position = marker.getPosition();\n        if (position) bounds.extend(position);\n      });\n      if (userMarker) {\n        const userPosition = userMarker.getPosition();\n        if (userPosition) bounds.extend(userPosition);\n      }\n      map.fitBounds(bounds);\n    }\n  };\n  const getProviderIcon = type => {\n    const iconColor = getProviderColor(type);\n    return `data:image/svg+xml;charset=UTF-8,` + encodeURIComponent(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\" fill=\"${iconColor}\" stroke=\"white\" stroke-width=\"2\"/>\n        <circle cx=\"16\" cy=\"12\" r=\"4\" fill=\"white\"/>\n        <text x=\"16\" y=\"16\" text-anchor=\"middle\" fill=\"${iconColor}\" font-size=\"8\" font-weight=\"bold\">${getProviderSymbol(type)}</text>\n      </svg>\n    `);\n  };\n  const getProviderColor = type => {\n    switch (type.toLowerCase()) {\n      case 'hospital':\n        return '#dc3545';\n      case 'urgent_care':\n        return '#fd7e14';\n      case 'pharmacy':\n        return '#28a745';\n      case 'clinic':\n        return '#007bff';\n      case 'specialist':\n        return '#6f42c1';\n      default:\n        return '#6c757d';\n    }\n  };\n  const getProviderSymbol = type => {\n    switch (type.toLowerCase()) {\n      case 'hospital':\n        return 'H';\n      case 'urgent_care':\n        return 'U';\n      case 'pharmacy':\n        return 'P';\n      case 'clinic':\n        return 'C';\n      case 'specialist':\n        return 'S';\n      default:\n        return 'M';\n    }\n  };\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const location = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        if (onLocationChange) {\n          onLocationChange(location);\n        }\n      }, error => {\n        setError(`Geolocation error: ${error.message}`);\n      }, {\n        timeout: 10000,\n        enableHighAccuracy: true\n      });\n    } else {\n      setError('Geolocation is not supported by this browser');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error loading map: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"location-btn\",\n        onClick: getCurrentLocation,\n        title: \"Get current location\",\n        children: \"\\uD83D\\uDCCD Current Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#007bff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), \"Your Location\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#dc3545'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), \"Hospital\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#fd7e14'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), \"Urgent Care\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#28a745'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), \"Pharmacy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"map-display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"R0oufu6GQOWyPuvwo53KT17Ti8s=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Loader","jsxDEV","_jsxDEV","MapView","userLocation","providers","onLocationChange","onProviderSelect","_s","mapRef","map","setMap","markers","setMarkers","userMarker","setUserMarker","loading","setLoading","error","setError","initializeMap","updateUserLocation","updateProviderMarkers","loader","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","version","libraries","google","load","current","defaultLocation","lat","lng","mapInstance","maps","Map","center","zoom","styles","featureType","elementType","stylers","color","addListener","event","latLng","location","geocoder","Geocoder","geocode","results","status","address","formatted_address","err","marker","Marker","position","title","icon","url","encodeURIComponent","scaledSize","Size","anchor","Point","setCenter","forEach","newMarkers","provider","index","name","getProviderIcon","type","infoWindow","InfoWindow","content","rating","repeat","Math","round","distance","toFixed","id","open","window","selectProvider","providerId","find","p","length","bounds","LatLngBounds","getPosition","extend","userPosition","fitBounds","iconColor","getProviderColor","getProviderSymbol","toLowerCase","getCurrentLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","message","timeout","enableHighAccuracy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reload","style","backgroundColor","ref","_c","$RefreshReg$"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport './MapView.css';\n\ninterface Location {\n  lat: number;\n  lng: number;\n  address?: string;\n}\n\ninterface HealthcareProvider {\n  id: string;\n  name: string;\n  address: string;\n  type: string;\n  rating?: number;\n  location: Location;\n  distance?: number;\n}\n\ninterface MapViewProps {\n  userLocation?: Location | null;\n  providers?: HealthcareProvider[];\n  onLocationChange?: (location: Location) => void;\n  onProviderSelect?: (provider: HealthcareProvider) => void;\n}\n\nconst MapView: React.FC<MapViewProps> = ({\n  userLocation,\n  providers = [],\n  onLocationChange,\n  onProviderSelect\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [markers, setMarkers] = useState<google.maps.Marker[]>([]);\n  const [userMarker, setUserMarker] = useState<google.maps.Marker | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    initializeMap();\n  }, []);\n\n  useEffect(() => {\n    if (map && userLocation) {\n      updateUserLocation(userLocation);\n    }\n  }, [map, userLocation]);\n\n  useEffect(() => {\n    if (map) {\n      updateProviderMarkers(providers);\n    }\n  }, [map, providers]);\n\n  const initializeMap = async () => {\n    try {\n      const loader = new Loader({\n        apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n        version: 'weekly',\n        libraries: ['places', 'geometry']\n      });\n\n      const google = await loader.load();\n      \n      if (!mapRef.current) return;\n\n      // Default to New York if no user location\n      const defaultLocation = userLocation || { lat: 40.7128, lng: -74.0060 };\n\n      const mapInstance = new google.maps.Map(mapRef.current, {\n        center: defaultLocation,\n        zoom: 13,\n        styles: [\n          {\n            featureType: 'poi.medical',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffeaa7' }]\n          }\n        ]\n      });\n\n      // Add click listener for location selection\n      mapInstance.addListener('click', (event: google.maps.MapMouseEvent) => {\n        if (event.latLng && onLocationChange) {\n          const location: Location = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          };\n          \n          // Reverse geocode to get address\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode({ location: event.latLng }, (results, status) => {\n            if (status === 'OK' && results && results[0]) {\n              location.address = results[0].formatted_address;\n            }\n            onLocationChange(location);\n          });\n        }\n      });\n\n      setMap(mapInstance);\n      setLoading(false);\n    } catch (err) {\n      setError(`Failed to initialize map: ${err}`);\n      setLoading(false);\n    }\n  };\n\n  const updateUserLocation = (location: Location) => {\n    if (!map) return;\n\n    // Remove existing user marker\n    if (userMarker) {\n      userMarker.setMap(null);\n    }\n\n    // Create new user marker\n    const marker = new google.maps.Marker({\n      position: location,\n      map: map,\n      title: 'Your Location',\n      icon: {\n        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"12\" cy=\"12\" r=\"8\" fill=\"#007bff\" stroke=\"white\" stroke-width=\"2\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"white\"/>\n          </svg>\n        `),\n        scaledSize: new google.maps.Size(24, 24),\n        anchor: new google.maps.Point(12, 12)\n      }\n    });\n\n    setUserMarker(marker);\n\n    // Center map on user location\n    map.setCenter(location);\n  };\n\n  const updateProviderMarkers = (providers: HealthcareProvider[]) => {\n    if (!map) return;\n\n    // Clear existing markers\n    markers.forEach(marker => marker.setMap(null));\n\n    // Create new markers\n    const newMarkers = providers.map((provider, index) => {\n      const marker = new google.maps.Marker({\n        position: provider.location,\n        map: map,\n        title: provider.name,\n        icon: {\n          url: getProviderIcon(provider.type),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n\n      // Create info window\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div class=\"marker-info\">\n            <h3>${provider.name}</h3>\n            <p><strong>Type:</strong> ${provider.type}</p>\n            <p><strong>Address:</strong> ${provider.address}</p>\n            ${provider.rating ? `<p><strong>Rating:</strong> ${'‚≠ê'.repeat(Math.round(provider.rating))}</p>` : ''}\n            ${provider.distance ? `<p><strong>Distance:</strong> ${provider.distance.toFixed(1)} miles</p>` : ''}\n            <button onclick=\"window.selectProvider('${provider.id}')\" class=\"select-btn\">\n              Select Provider\n            </button>\n          </div>\n        `\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n      });\n\n      return marker;\n    });\n\n    setMarkers(newMarkers);\n\n    // Set up global function for provider selection\n    (window as any).selectProvider = (providerId: string) => {\n      const provider = providers.find(p => p.id === providerId);\n      if (provider && onProviderSelect) {\n        onProviderSelect(provider);\n      }\n    };\n\n    // Adjust map bounds to show all markers\n    if (newMarkers.length > 0) {\n      const bounds = new google.maps.LatLngBounds();\n      newMarkers.forEach(marker => {\n        const position = marker.getPosition();\n        if (position) bounds.extend(position);\n      });\n      \n      if (userMarker) {\n        const userPosition = userMarker.getPosition();\n        if (userPosition) bounds.extend(userPosition);\n      }\n\n      map.fitBounds(bounds);\n    }\n  };\n\n  const getProviderIcon = (type: string): string => {\n    const iconColor = getProviderColor(type);\n    return `data:image/svg+xml;charset=UTF-8,` + encodeURIComponent(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\" fill=\"${iconColor}\" stroke=\"white\" stroke-width=\"2\"/>\n        <circle cx=\"16\" cy=\"12\" r=\"4\" fill=\"white\"/>\n        <text x=\"16\" y=\"16\" text-anchor=\"middle\" fill=\"${iconColor}\" font-size=\"8\" font-weight=\"bold\">${getProviderSymbol(type)}</text>\n      </svg>\n    `);\n  };\n\n  const getProviderColor = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return '#dc3545';\n      case 'urgent_care': return '#fd7e14';\n      case 'pharmacy': return '#28a745';\n      case 'clinic': return '#007bff';\n      case 'specialist': return '#6f42c1';\n      default: return '#6c757d';\n    }\n  };\n\n  const getProviderSymbol = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return 'H';\n      case 'urgent_care': return 'U';\n      case 'pharmacy': return 'P';\n      case 'clinic': return 'C';\n      case 'specialist': return 'S';\n      default: return 'M';\n    }\n  };\n\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const location: Location = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          \n          if (onLocationChange) {\n            onLocationChange(location);\n          }\n        },\n        (error) => {\n          setError(`Geolocation error: ${error.message}`);\n        },\n        { timeout: 10000, enableHighAccuracy: true }\n      );\n    } else {\n      setError('Geolocation is not supported by this browser');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"map-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading map...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"map-error\">\n        <p>Error loading map: {error}</p>\n        <button onClick={() => window.location.reload()}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-controls\">\n        <button \n          className=\"location-btn\"\n          onClick={getCurrentLocation}\n          title=\"Get current location\"\n        >\n          üìç Current Location\n        </button>\n        <div className=\"map-legend\">\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#007bff'}}></span>\n            Your Location\n          </span>\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#dc3545'}}></span>\n            Hospital\n          </span>\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#fd7e14'}}></span>\n            Urgent Care\n          </span>\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#28a745'}}></span>\n            Pharmacy\n          </span>\n        </div>\n      </div>\n      <div ref={mapRef} className=\"map-display\" />\n    </div>\n  );\n};\n\nexport default MapView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,2BAA2B;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAyBvB,MAAMC,OAA+B,GAAGA,CAAC;EACvCC,YAAY;EACZC,SAAS,GAAG,EAAE;EACdC,gBAAgB;EAChBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,MAAM,GAAGX,MAAM,CAAiB,IAAI,CAAC;EAC3C,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAyB,IAAI,CAAC;EAC5D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAuB,EAAE,CAAC;EAChE,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAA4B,IAAI,CAAC;EAC7E,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACduB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd,IAAIa,GAAG,IAAIN,YAAY,EAAE;MACvBiB,kBAAkB,CAACjB,YAAY,CAAC;IAClC;EACF,CAAC,EAAE,CAACM,GAAG,EAAEN,YAAY,CAAC,CAAC;EAEvBP,SAAS,CAAC,MAAM;IACd,IAAIa,GAAG,EAAE;MACPY,qBAAqB,CAACjB,SAAS,CAAC;IAClC;EACF,CAAC,EAAE,CAACK,GAAG,EAAEL,SAAS,CAAC,CAAC;EAEpB,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMG,MAAM,GAAG,IAAIvB,MAAM,CAAC;QACxBwB,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,IAAI,EAAE;QACvDC,OAAO,EAAE,QAAQ;QACjBC,SAAS,EAAE,CAAC,QAAQ,EAAE,UAAU;MAClC,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACtB,MAAM,CAACuB,OAAO,EAAE;;MAErB;MACA,MAAMC,eAAe,GAAG7B,YAAY,IAAI;QAAE8B,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;MAAQ,CAAC;MAEvE,MAAMC,WAAW,GAAG,IAAIN,MAAM,CAACO,IAAI,CAACC,GAAG,CAAC7B,MAAM,CAACuB,OAAO,EAAE;QACtDO,MAAM,EAAEN,eAAe;QACvBO,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,CACN;UACEC,WAAW,EAAE,aAAa;UAC1BC,WAAW,EAAE,UAAU;UACvBC,OAAO,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAU,CAAC;QAChC,CAAC;MAEL,CAAC,CAAC;;MAEF;MACAT,WAAW,CAACU,WAAW,CAAC,OAAO,EAAGC,KAAgC,IAAK;QACrE,IAAIA,KAAK,CAACC,MAAM,IAAI1C,gBAAgB,EAAE;UACpC,MAAM2C,QAAkB,GAAG;YACzBf,GAAG,EAAEa,KAAK,CAACC,MAAM,CAACd,GAAG,CAAC,CAAC;YACvBC,GAAG,EAAEY,KAAK,CAACC,MAAM,CAACb,GAAG,CAAC;UACxB,CAAC;;UAED;UACA,MAAMe,QAAQ,GAAG,IAAIpB,MAAM,CAACO,IAAI,CAACc,QAAQ,CAAC,CAAC;UAC3CD,QAAQ,CAACE,OAAO,CAAC;YAAEH,QAAQ,EAAEF,KAAK,CAACC;UAAO,CAAC,EAAE,CAACK,OAAO,EAAEC,MAAM,KAAK;YAChE,IAAIA,MAAM,KAAK,IAAI,IAAID,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;cAC5CJ,QAAQ,CAACM,OAAO,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,iBAAiB;YACjD;YACAlD,gBAAgB,CAAC2C,QAAQ,CAAC;UAC5B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEFtC,MAAM,CAACyB,WAAW,CAAC;MACnBnB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOwC,GAAG,EAAE;MACZtC,QAAQ,CAAC,6BAA6BsC,GAAG,EAAE,CAAC;MAC5CxC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMI,kBAAkB,GAAI4B,QAAkB,IAAK;IACjD,IAAI,CAACvC,GAAG,EAAE;;IAEV;IACA,IAAII,UAAU,EAAE;MACdA,UAAU,CAACH,MAAM,CAAC,IAAI,CAAC;IACzB;;IAEA;IACA,MAAM+C,MAAM,GAAG,IAAI5B,MAAM,CAACO,IAAI,CAACsB,MAAM,CAAC;MACpCC,QAAQ,EAAEX,QAAQ;MAClBvC,GAAG,EAAEA,GAAG;MACRmD,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE;QACJC,GAAG,EAAE,mCAAmC,GAAGC,kBAAkB,CAAC;AACtE;AACA;AACA;AACA;AACA,SAAS,CAAC;QACFC,UAAU,EAAE,IAAInC,MAAM,CAACO,IAAI,CAAC6B,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;QACxCC,MAAM,EAAE,IAAIrC,MAAM,CAACO,IAAI,CAAC+B,KAAK,CAAC,EAAE,EAAE,EAAE;MACtC;IACF,CAAC,CAAC;IAEFrD,aAAa,CAAC2C,MAAM,CAAC;;IAErB;IACAhD,GAAG,CAAC2D,SAAS,CAACpB,QAAQ,CAAC;EACzB,CAAC;EAED,MAAM3B,qBAAqB,GAAIjB,SAA+B,IAAK;IACjE,IAAI,CAACK,GAAG,EAAE;;IAEV;IACAE,OAAO,CAAC0D,OAAO,CAACZ,MAAM,IAAIA,MAAM,CAAC/C,MAAM,CAAC,IAAI,CAAC,CAAC;;IAE9C;IACA,MAAM4D,UAAU,GAAGlE,SAAS,CAACK,GAAG,CAAC,CAAC8D,QAAQ,EAAEC,KAAK,KAAK;MACpD,MAAMf,MAAM,GAAG,IAAI5B,MAAM,CAACO,IAAI,CAACsB,MAAM,CAAC;QACpCC,QAAQ,EAAEY,QAAQ,CAACvB,QAAQ;QAC3BvC,GAAG,EAAEA,GAAG;QACRmD,KAAK,EAAEW,QAAQ,CAACE,IAAI;QACpBZ,IAAI,EAAE;UACJC,GAAG,EAAEY,eAAe,CAACH,QAAQ,CAACI,IAAI,CAAC;UACnCX,UAAU,EAAE,IAAInC,MAAM,CAACO,IAAI,CAAC6B,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;UACxCC,MAAM,EAAE,IAAIrC,MAAM,CAACO,IAAI,CAAC+B,KAAK,CAAC,EAAE,EAAE,EAAE;QACtC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMS,UAAU,GAAG,IAAI/C,MAAM,CAACO,IAAI,CAACyC,UAAU,CAAC;QAC5CC,OAAO,EAAE;AACjB;AACA,kBAAkBP,QAAQ,CAACE,IAAI;AAC/B,wCAAwCF,QAAQ,CAACI,IAAI;AACrD,2CAA2CJ,QAAQ,CAACjB,OAAO;AAC3D,cAAciB,QAAQ,CAACQ,MAAM,GAAG,+BAA+B,GAAG,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACX,QAAQ,CAACQ,MAAM,CAAC,CAAC,MAAM,GAAG,EAAE;AACjH,cAAcR,QAAQ,CAACY,QAAQ,GAAG,iCAAiCZ,QAAQ,CAACY,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,YAAY,GAAG,EAAE;AAChH,sDAAsDb,QAAQ,CAACc,EAAE;AACjE;AACA;AACA;AACA;MACM,CAAC,CAAC;MAEF5B,MAAM,CAACZ,WAAW,CAAC,OAAO,EAAE,MAAM;QAChC+B,UAAU,CAACU,IAAI,CAAC7E,GAAG,EAAEgD,MAAM,CAAC;MAC9B,CAAC,CAAC;MAEF,OAAOA,MAAM;IACf,CAAC,CAAC;IAEF7C,UAAU,CAAC0D,UAAU,CAAC;;IAEtB;IACCiB,MAAM,CAASC,cAAc,GAAIC,UAAkB,IAAK;MACvD,MAAMlB,QAAQ,GAAGnE,SAAS,CAACsF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKI,UAAU,CAAC;MACzD,IAAIlB,QAAQ,IAAIjE,gBAAgB,EAAE;QAChCA,gBAAgB,CAACiE,QAAQ,CAAC;MAC5B;IACF,CAAC;;IAED;IACA,IAAID,UAAU,CAACsB,MAAM,GAAG,CAAC,EAAE;MACzB,MAAMC,MAAM,GAAG,IAAIhE,MAAM,CAACO,IAAI,CAAC0D,YAAY,CAAC,CAAC;MAC7CxB,UAAU,CAACD,OAAO,CAACZ,MAAM,IAAI;QAC3B,MAAME,QAAQ,GAAGF,MAAM,CAACsC,WAAW,CAAC,CAAC;QACrC,IAAIpC,QAAQ,EAAEkC,MAAM,CAACG,MAAM,CAACrC,QAAQ,CAAC;MACvC,CAAC,CAAC;MAEF,IAAI9C,UAAU,EAAE;QACd,MAAMoF,YAAY,GAAGpF,UAAU,CAACkF,WAAW,CAAC,CAAC;QAC7C,IAAIE,YAAY,EAAEJ,MAAM,CAACG,MAAM,CAACC,YAAY,CAAC;MAC/C;MAEAxF,GAAG,CAACyF,SAAS,CAACL,MAAM,CAAC;IACvB;EACF,CAAC;EAED,MAAMnB,eAAe,GAAIC,IAAY,IAAa;IAChD,MAAMwB,SAAS,GAAGC,gBAAgB,CAACzB,IAAI,CAAC;IACxC,OAAO,mCAAmC,GAAGZ,kBAAkB,CAAC;AACpE;AACA,uGAAuGoC,SAAS;AAChH;AACA,yDAAyDA,SAAS,sCAAsCE,iBAAiB,CAAC1B,IAAI,CAAC;AAC/H;AACA,KAAK,CAAC;EACJ,CAAC;EAED,MAAMyB,gBAAgB,GAAIzB,IAAY,IAAa;IACjD,QAAQA,IAAI,CAAC2B,WAAW,CAAC,CAAC;MACxB,KAAK,UAAU;QAAE,OAAO,SAAS;MACjC,KAAK,aAAa;QAAE,OAAO,SAAS;MACpC,KAAK,UAAU;QAAE,OAAO,SAAS;MACjC,KAAK,QAAQ;QAAE,OAAO,SAAS;MAC/B,KAAK,YAAY;QAAE,OAAO,SAAS;MACnC;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,MAAMD,iBAAiB,GAAI1B,IAAY,IAAa;IAClD,QAAQA,IAAI,CAAC2B,WAAW,CAAC,CAAC;MACxB,KAAK,UAAU;QAAE,OAAO,GAAG;MAC3B,KAAK,aAAa;QAAE,OAAO,GAAG;MAC9B,KAAK,UAAU;QAAE,OAAO,GAAG;MAC3B,KAAK,QAAQ;QAAE,OAAO,GAAG;MACzB,KAAK,YAAY;QAAE,OAAO,GAAG;MAC7B;QAAS,OAAO,GAAG;IACrB;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrC/C,QAAQ,IAAK;QACZ,MAAMX,QAAkB,GAAG;UACzBf,GAAG,EAAE0B,QAAQ,CAACgD,MAAM,CAACC,QAAQ;UAC7B1E,GAAG,EAAEyB,QAAQ,CAACgD,MAAM,CAACE;QACvB,CAAC;QAED,IAAIxG,gBAAgB,EAAE;UACpBA,gBAAgB,CAAC2C,QAAQ,CAAC;QAC5B;MACF,CAAC,EACA/B,KAAK,IAAK;QACTC,QAAQ,CAAC,sBAAsBD,KAAK,CAAC6F,OAAO,EAAE,CAAC;MACjD,CAAC,EACD;QAAEC,OAAO,EAAE,KAAK;QAAEC,kBAAkB,EAAE;MAAK,CAC7C,CAAC;IACH,CAAC,MAAM;MACL9F,QAAQ,CAAC,8CAA8C,CAAC;IAC1D;EACF,CAAC;EAED,IAAIH,OAAO,EAAE;IACX,oBACEd,OAAA;MAAKgH,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BjH,OAAA;QAAKgH,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCrH,OAAA;QAAAiH,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEV;EAEA,IAAIrG,KAAK,EAAE;IACT,oBACEhB,OAAA;MAAKgH,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjH,OAAA;QAAAiH,QAAA,GAAG,qBAAmB,EAACjG,KAAK;MAAA;QAAAkG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCrH,OAAA;QAAQsH,OAAO,EAAEA,CAAA,KAAMhC,MAAM,CAACvC,QAAQ,CAACwE,MAAM,CAAC,CAAE;QAAAN,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACErH,OAAA;IAAKgH,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjH,OAAA;MAAKgH,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjH,OAAA;QACEgH,SAAS,EAAC,cAAc;QACxBM,OAAO,EAAEhB,kBAAmB;QAC5B3C,KAAK,EAAC,sBAAsB;QAAAsD,QAAA,EAC7B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrH,OAAA;QAAKgH,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjH,OAAA;UAAMgH,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC3BjH,OAAA;YAAMgH,SAAS,EAAC,cAAc;YAACQ,KAAK,EAAE;cAACC,eAAe,EAAE;YAAS;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,iBAE7E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPrH,OAAA;UAAMgH,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC3BjH,OAAA;YAAMgH,SAAS,EAAC,cAAc;YAACQ,KAAK,EAAE;cAACC,eAAe,EAAE;YAAS;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,YAE7E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPrH,OAAA;UAAMgH,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC3BjH,OAAA;YAAMgH,SAAS,EAAC,cAAc;YAACQ,KAAK,EAAE;cAACC,eAAe,EAAE;YAAS;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAE7E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPrH,OAAA;UAAMgH,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC3BjH,OAAA;YAAMgH,SAAS,EAAC,cAAc;YAACQ,KAAK,EAAE;cAACC,eAAe,EAAE;YAAS;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,YAE7E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrH,OAAA;MAAK0H,GAAG,EAAEnH,MAAO;MAACyG,SAAS,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC/G,EAAA,CAnSIL,OAA+B;AAAA0H,EAAA,GAA/B1H,OAA+B;AAqSrC,eAAeA,OAAO;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}