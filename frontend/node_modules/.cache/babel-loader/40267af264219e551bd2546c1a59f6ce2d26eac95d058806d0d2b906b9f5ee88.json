{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SimpleMapTest=()=>{const mapRef=useRef(null);const[status,setStatus]=useState('Initializing...');useEffect(()=>{initializeSimpleMap();},[]);const initializeSimpleMap=async()=>{try{const apiKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;if(!apiKey){setStatus('ERROR: Google Maps API key is missing');return;}setStatus(\"API Key found: \".concat(apiKey.substring(0,10),\"...\"));// Simple script loading approach\nconst script=document.createElement('script');script.src=\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey,\"&libraries=places\");script.async=true;script.defer=true;script.onload=()=>{setStatus('Google Maps script loaded successfully');if(!mapRef.current){setStatus('ERROR: Map container not found');return;}try{const map=new google.maps.Map(mapRef.current,{center:{lat:40.7128,lng:-74.0060},// New York\nzoom:13});setStatus('SUCCESS: Map created and displayed');}catch(mapError){setStatus(\"ERROR creating map: \".concat(mapError));}};script.onerror=()=>{setStatus('ERROR: Failed to load Google Maps script');};// Check if script already exists\nconst existingScript=document.querySelector('script[src*=\"maps.googleapis.com\"]');if(existingScript){setStatus('Google Maps script already loaded');if(window.google&&window.google.maps){const map=new google.maps.Map(mapRef.current,{center:{lat:40.7128,lng:-74.0060},zoom:13});setStatus('SUCCESS: Map created with existing script');}}else{document.head.appendChild(script);}}catch(error){setStatus(\"ERROR: \".concat(error));}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Simple Google Maps Test\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",status]}),/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{height:'400px',width:'100%',border:'2px solid #ccc',marginTop:'20px'}})]});};export default SimpleMapTest;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","SimpleMapTest","mapRef","status","setStatus","initializeSimpleMap","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","concat","substring","script","document","createElement","src","async","defer","onload","current","map","google","maps","Map","center","lat","lng","zoom","mapError","onerror","existingScript","querySelector","window","head","appendChild","error","style","padding","children","ref","height","width","border","marginTop"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/SimpleMapTest.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst SimpleMapTest: React.FC = () => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [status, setStatus] = useState<string>('Initializing...');\n\n  useEffect(() => {\n    initializeSimpleMap();\n  }, []);\n\n  const initializeSimpleMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      \n      if (!apiKey) {\n        setStatus('ERROR: Google Maps API key is missing');\n        return;\n      }\n\n      setStatus(`API Key found: ${apiKey.substring(0, 10)}...`);\n\n      // Simple script loading approach\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n\n      script.onload = () => {\n        setStatus('Google Maps script loaded successfully');\n        \n        if (!mapRef.current) {\n          setStatus('ERROR: Map container not found');\n          return;\n        }\n\n        try {\n          const map = new google.maps.Map(mapRef.current, {\n            center: { lat: 40.7128, lng: -74.0060 }, // New York\n            zoom: 13,\n          });\n\n          setStatus('SUCCESS: Map created and displayed');\n        } catch (mapError) {\n          setStatus(`ERROR creating map: ${mapError}`);\n        }\n      };\n\n      script.onerror = () => {\n        setStatus('ERROR: Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        setStatus('Google Maps script already loaded');\n        if (window.google && window.google.maps) {\n          const map = new google.maps.Map(mapRef.current!, {\n            center: { lat: 40.7128, lng: -74.0060 },\n            zoom: 13,\n          });\n          setStatus('SUCCESS: Map created with existing script');\n        }\n      } else {\n        document.head.appendChild(script);\n      }\n\n    } catch (error) {\n      setStatus(`ERROR: ${error}`);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h3>Simple Google Maps Test</h3>\n      <p><strong>Status:</strong> {status}</p>\n      <div \n        ref={mapRef} \n        style={{ \n          height: '400px', \n          width: '100%', \n          border: '2px solid #ccc',\n          marginTop: '20px'\n        }} \n      />\n    </div>\n  );\n};\n\nexport default SimpleMapTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}