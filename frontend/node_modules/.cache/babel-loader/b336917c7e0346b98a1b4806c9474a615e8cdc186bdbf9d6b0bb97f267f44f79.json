{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SimpleMapView=_ref=>{let{userLocation,providers=[],selectedProvider,onLocationChange,onProviderSelect}=_ref;const mapRef=useRef(null);const[status,setStatus]=useState('Initializing...');const[map,setMap]=useState(null);const[markers,setMarkers]=useState([]);const[markerProviderMap,setMarkerProviderMap]=useState(new Map());useEffect(()=>{initializeMap();},[]);useEffect(()=>{if(map&&providers.length>0){addProviderMarkers();}},[map,providers]);useEffect(()=>{if(selectedProvider&&map){highlightProvider(selectedProvider);}},[selectedProvider,map,markerProviderMap]);const initializeMap=async()=>{try{const apiKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;if(!apiKey){setStatus('ERROR: Google Maps API key is missing');return;}setStatus(\"Loading Google Maps...\");// Simple script loading approach (same as SimpleMapTest)\nconst script=document.createElement('script');script.src=\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey,\"&libraries=places\");script.async=true;script.defer=true;script.onload=()=>{setStatus('Google Maps script loaded, creating map...');if(!mapRef.current){setStatus('ERROR: Map container not found');return;}try{const defaultLocation=userLocation||{lat:40.7128,lng:-74.0060};// NYC\nconst mapInstance=new google.maps.Map(mapRef.current,{center:defaultLocation,zoom:13,styles:[{featureType:'poi.medical',elementType:'geometry',stylers:[{color:'#ffeaa7'}]}]});// Add click listener for location selection\nmapInstance.addListener('click',event=>{if(event.latLng&&onLocationChange){const location={lat:event.latLng.lat(),lng:event.latLng.lng()};onLocationChange(location);}});setMap(mapInstance);setStatus('SUCCESS: Map created and displayed');}catch(mapError){setStatus(\"ERROR creating map: \".concat(mapError));}};script.onerror=()=>{setStatus('ERROR: Failed to load Google Maps script');};// Check if script already exists\nconst existingScript=document.querySelector('script[src*=\"maps.googleapis.com\"]');if(existingScript){setStatus('Google Maps script already loaded');if(window.google&&window.google.maps&&mapRef.current){const defaultLocation=userLocation||{lat:40.7128,lng:-74.0060};const mapInstance=new google.maps.Map(mapRef.current,{center:defaultLocation,zoom:13});setMap(mapInstance);setStatus('SUCCESS: Map created with existing script');}}else{document.head.appendChild(script);}}catch(error){setStatus(\"ERROR: \".concat(error));}};const addProviderMarkers=()=>{if(!map)return;// Clear existing markers and map\nmarkers.forEach(marker=>marker.setMap(null));markerProviderMap.clear();setMarkers([]);const newMarkers=[];const newMarkerMap=new Map();// Add new markers\nproviders.forEach(provider=>{// Ensure we have a proper LatLng object\nconst position=new google.maps.LatLng(provider.location.lat,provider.location.lng);const marker=new google.maps.Marker({position:position,map:map,title:provider.name,icon:{url:getProviderIcon(provider.type),scaledSize:new google.maps.Size(32,32),anchor:new google.maps.Point(16,32)}});// Add info window\nconst infoWindow=new google.maps.InfoWindow({content:\"\\n          <div style=\\\"max-width: 250px; padding: 8px;\\\">\\n            <h3 style=\\\"margin: 0 0 8px 0; color: #333; font-size: 1rem;\\\">\".concat(provider.name,\"</h3>\\n            <p style=\\\"margin: 4px 0; font-size: 0.9rem; color: #555;\\\"><strong>Type:</strong> \").concat(provider.type,\"</p>\\n            <p style=\\\"margin: 4px 0; font-size: 0.9rem; color: #555;\\\"><strong>Address:</strong> \").concat(provider.address,\"</p>\\n            \").concat(provider.rating?\"<p style=\\\"margin: 4px 0; font-size: 0.9rem; color: #555;\\\"><strong>Rating:</strong> \".concat('‚≠ê'.repeat(Math.round(provider.rating)),\"</p>\"):'',\"\\n            \").concat(provider.distance?\"<p style=\\\"margin: 4px 0; font-size: 0.9rem; color: #555;\\\"><strong>Distance:</strong> \".concat(provider.distance.toFixed(1),\" miles</p>\"):'',\"\\n          </div>\\n        \")});marker.addListener('click',()=>{// Close all other info windows\nnewMarkerMap.forEach(_ref2=>{let{infoWindow:otherWindow}=_ref2;otherWindow.close();});infoWindow.open(map,marker);if(onProviderSelect){onProviderSelect(provider);}});newMarkers.push(marker);newMarkerMap.set(provider.id,{marker,infoWindow});});setMarkers(newMarkers);setMarkerProviderMap(newMarkerMap);// Adjust map bounds to show all markers\nif(newMarkers.length>0){try{const bounds=new google.maps.LatLngBounds();newMarkers.forEach(marker=>{const position=marker.getPosition();if(position){bounds.extend(position);}});// Only fit bounds if we have valid bounds\nif(!bounds.isEmpty()){map.fitBounds(bounds);}}catch(error){console.error('Error setting map bounds:',error);// Fallback to centering on first marker\nif(newMarkers.length>0){const firstPosition=newMarkers[0].getPosition();if(firstPosition){map.setCenter(firstPosition);map.setZoom(13);}}}}};const highlightProvider=provider=>{const markerData=markerProviderMap.get(provider.id);if(markerData&&map){const{marker,infoWindow}=markerData;// Close all other info windows first\nmarkerProviderMap.forEach(_ref3=>{let{infoWindow:otherWindow}=_ref3;otherWindow.close();});// Center map on the selected marker\nconst position=marker.getPosition();if(position){map.setCenter(position);map.setZoom(15);// Zoom in to show detail\n}// Open the info window for this marker\ninfoWindow.open(map,marker);// Optional: Add a bounce animation\nmarker.setAnimation(google.maps.Animation.BOUNCE);setTimeout(()=>{marker.setAnimation(null);},2000);}};const getProviderIcon=type=>{const iconColor=getProviderColor(type);return\"data:image/svg+xml;charset=UTF-8,\"+encodeURIComponent(\"\\n      <svg width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <path d=\\\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\\\" fill=\\\"\".concat(iconColor,\"\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\"/>\\n        <circle cx=\\\"16\\\" cy=\\\"12\\\" r=\\\"4\\\" fill=\\\"white\\\"/>\\n        <text x=\\\"16\\\" y=\\\"16\\\" text-anchor=\\\"middle\\\" fill=\\\"\").concat(iconColor,\"\\\" font-size=\\\"8\\\" font-weight=\\\"bold\\\">\").concat(getProviderSymbol(type),\"</text>\\n      </svg>\\n    \"));};const getProviderColor=type=>{switch(type.toLowerCase()){case'hospital':return'#dc3545';case'urgent_care':return'#fd7e14';case'pharmacy':return'#28a745';case'clinic':return'#007bff';case'specialist':return'#6f42c1';default:return'#6c757d';}};const getProviderSymbol=type=>{switch(type.toLowerCase()){case'hospital':return'H';case'urgent_care':return'U';case'pharmacy':return'P';case'clinic':return'C';case'specialist':return'S';default:return'M';}};return/*#__PURE__*/_jsxs(\"div\",{style:{height:'100%',width:'100%'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:'10px',background:'#f8f9fa',borderBottom:'1px solid #dee2e6'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Map Status:\"}),\" \",status]}),/*#__PURE__*/_jsx(\"div\",{ref:mapRef,style:{height:'calc(100% - 50px)',width:'100%',border:'2px solid #ccc',backgroundColor:'#f0f0f0'}})]});};export default SimpleMapView;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","SimpleMapView","_ref","userLocation","providers","selectedProvider","onLocationChange","onProviderSelect","mapRef","status","setStatus","map","setMap","markers","setMarkers","markerProviderMap","setMarkerProviderMap","Map","initializeMap","length","addProviderMarkers","highlightProvider","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","script","document","createElement","src","concat","async","defer","onload","current","defaultLocation","lat","lng","mapInstance","google","maps","center","zoom","styles","featureType","elementType","stylers","color","addListener","event","latLng","location","mapError","onerror","existingScript","querySelector","window","head","appendChild","error","forEach","marker","clear","newMarkers","newMarkerMap","provider","position","LatLng","Marker","title","name","icon","url","getProviderIcon","type","scaledSize","Size","anchor","Point","infoWindow","InfoWindow","content","address","rating","repeat","Math","round","distance","toFixed","_ref2","otherWindow","close","open","push","set","id","bounds","LatLngBounds","getPosition","extend","isEmpty","fitBounds","console","firstPosition","setCenter","setZoom","markerData","get","_ref3","setAnimation","Animation","BOUNCE","setTimeout","iconColor","getProviderColor","encodeURIComponent","getProviderSymbol","toLowerCase","style","height","width","children","padding","background","borderBottom","ref","border","backgroundColor"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/SimpleMapView.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Location } from '../services/locationService';\nimport { HealthcareProvider } from '../services/placesService';\n\ninterface SimpleMapViewProps {\n  userLocation?: Location | null;\n  providers?: HealthcareProvider[];\n  selectedProvider?: HealthcareProvider | null;\n  onLocationChange?: (location: Location) => void;\n  onProviderSelect?: (provider: HealthcareProvider) => void;\n}\n\nconst SimpleMapView: React.FC<SimpleMapViewProps> = ({\n  userLocation,\n  providers = [],\n  selectedProvider,\n  onLocationChange,\n  onProviderSelect\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [status, setStatus] = useState<string>('Initializing...');\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [markers, setMarkers] = useState<google.maps.Marker[]>([]);\n  const [markerProviderMap, setMarkerProviderMap] = useState<Map<string, { marker: google.maps.Marker, infoWindow: google.maps.InfoWindow }>>(new Map());\n\n  useEffect(() => {\n    initializeMap();\n  }, []);\n\n  useEffect(() => {\n    if (map && providers.length > 0) {\n      addProviderMarkers();\n    }\n  }, [map, providers]);\n\n  useEffect(() => {\n    if (selectedProvider && map) {\n      highlightProvider(selectedProvider);\n    }\n  }, [selectedProvider, map, markerProviderMap]);\n\n  const initializeMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      \n      if (!apiKey) {\n        setStatus('ERROR: Google Maps API key is missing');\n        return;\n      }\n\n      setStatus(`Loading Google Maps...`);\n\n      // Simple script loading approach (same as SimpleMapTest)\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n\n      script.onload = () => {\n        setStatus('Google Maps script loaded, creating map...');\n        \n        if (!mapRef.current) {\n          setStatus('ERROR: Map container not found');\n          return;\n        }\n\n        try {\n          const defaultLocation = userLocation || { lat: 40.7128, lng: -74.0060 }; // NYC\n          const mapInstance = new google.maps.Map(mapRef.current, {\n            center: defaultLocation,\n            zoom: 13,\n            styles: [\n              {\n                featureType: 'poi.medical',\n                elementType: 'geometry',\n                stylers: [{ color: '#ffeaa7' }]\n              }\n            ]\n          });\n\n          // Add click listener for location selection\n          mapInstance.addListener('click', (event: google.maps.MapMouseEvent) => {\n            if (event.latLng && onLocationChange) {\n              const location: Location = {\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng()\n              };\n              onLocationChange(location);\n            }\n          });\n\n          setMap(mapInstance);\n          setStatus('SUCCESS: Map created and displayed');\n        } catch (mapError) {\n          setStatus(`ERROR creating map: ${mapError}`);\n        }\n      };\n\n      script.onerror = () => {\n        setStatus('ERROR: Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        setStatus('Google Maps script already loaded');\n        if (window.google && window.google.maps && mapRef.current) {\n          const defaultLocation = userLocation || { lat: 40.7128, lng: -74.0060 };\n          const mapInstance = new google.maps.Map(mapRef.current, {\n            center: defaultLocation,\n            zoom: 13,\n          });\n          setMap(mapInstance);\n          setStatus('SUCCESS: Map created with existing script');\n        }\n      } else {\n        document.head.appendChild(script);\n      }\n\n    } catch (error) {\n      setStatus(`ERROR: ${error}`);\n    }\n  };\n\n  const addProviderMarkers = () => {\n    if (!map) return;\n\n    // Clear existing markers and map\n    markers.forEach(marker => marker.setMap(null));\n    markerProviderMap.clear();\n    setMarkers([]);\n\n    const newMarkers: google.maps.Marker[] = [];\n    const newMarkerMap = new Map<string, { marker: google.maps.Marker, infoWindow: google.maps.InfoWindow }>();\n\n    // Add new markers\n    providers.forEach(provider => {\n      // Ensure we have a proper LatLng object\n      const position = new google.maps.LatLng(provider.location.lat, provider.location.lng);\n      \n      const marker = new google.maps.Marker({\n        position: position,\n        map: map,\n        title: provider.name,\n        icon: {\n          url: getProviderIcon(provider.type),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n\n      // Add info window\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div style=\"max-width: 250px; padding: 8px;\">\n            <h3 style=\"margin: 0 0 8px 0; color: #333; font-size: 1rem;\">${provider.name}</h3>\n            <p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Type:</strong> ${provider.type}</p>\n            <p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Address:</strong> ${provider.address}</p>\n            ${provider.rating ? `<p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Rating:</strong> ${'‚≠ê'.repeat(Math.round(provider.rating))}</p>` : ''}\n            ${provider.distance ? `<p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Distance:</strong> ${provider.distance.toFixed(1)} miles</p>` : ''}\n          </div>\n        `\n      });\n\n      marker.addListener('click', () => {\n        // Close all other info windows\n        newMarkerMap.forEach(({ infoWindow: otherWindow }) => {\n          otherWindow.close();\n        });\n        \n        infoWindow.open(map, marker);\n        if (onProviderSelect) {\n          onProviderSelect(provider);\n        }\n      });\n\n      newMarkers.push(marker);\n      newMarkerMap.set(provider.id, { marker, infoWindow });\n    });\n\n    setMarkers(newMarkers);\n    setMarkerProviderMap(newMarkerMap);\n\n    // Adjust map bounds to show all markers\n    if (newMarkers.length > 0) {\n      try {\n        const bounds = new google.maps.LatLngBounds();\n        newMarkers.forEach(marker => {\n          const position = marker.getPosition();\n          if (position) {\n            bounds.extend(position);\n          }\n        });\n        \n        // Only fit bounds if we have valid bounds\n        if (!bounds.isEmpty()) {\n          map.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error('Error setting map bounds:', error);\n        // Fallback to centering on first marker\n        if (newMarkers.length > 0) {\n          const firstPosition = newMarkers[0].getPosition();\n          if (firstPosition) {\n            map.setCenter(firstPosition);\n            map.setZoom(13);\n          }\n        }\n      }\n    }\n  };\n\n  const highlightProvider = (provider: HealthcareProvider) => {\n    const markerData = markerProviderMap.get(provider.id);\n    if (markerData && map) {\n      const { marker, infoWindow } = markerData;\n      \n      // Close all other info windows first\n      markerProviderMap.forEach(({ infoWindow: otherWindow }) => {\n        otherWindow.close();\n      });\n      \n      // Center map on the selected marker\n      const position = marker.getPosition();\n      if (position) {\n        map.setCenter(position);\n        map.setZoom(15); // Zoom in to show detail\n      }\n      \n      // Open the info window for this marker\n      infoWindow.open(map, marker);\n      \n      // Optional: Add a bounce animation\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n      setTimeout(() => {\n        marker.setAnimation(null);\n      }, 2000);\n    }\n  };\n\n  const getProviderIcon = (type: string): string => {\n    const iconColor = getProviderColor(type);\n    return `data:image/svg+xml;charset=UTF-8,` + encodeURIComponent(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\" fill=\"${iconColor}\" stroke=\"white\" stroke-width=\"2\"/>\n        <circle cx=\"16\" cy=\"12\" r=\"4\" fill=\"white\"/>\n        <text x=\"16\" y=\"16\" text-anchor=\"middle\" fill=\"${iconColor}\" font-size=\"8\" font-weight=\"bold\">${getProviderSymbol(type)}</text>\n      </svg>\n    `);\n  };\n\n  const getProviderColor = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return '#dc3545';\n      case 'urgent_care': return '#fd7e14';\n      case 'pharmacy': return '#28a745';\n      case 'clinic': return '#007bff';\n      case 'specialist': return '#6f42c1';\n      default: return '#6c757d';\n    }\n  };\n\n  const getProviderSymbol = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return 'H';\n      case 'urgent_care': return 'U';\n      case 'pharmacy': return 'P';\n      case 'clinic': return 'C';\n      case 'specialist': return 'S';\n      default: return 'M';\n    }\n  };\n\n  return (\n    <div style={{ height: '100%', width: '100%' }}>\n      <div style={{ padding: '10px', background: '#f8f9fa', borderBottom: '1px solid #dee2e6' }}>\n        <strong>Map Status:</strong> {status}\n      </div>\n      <div \n        ref={mapRef} \n        style={{ \n          height: 'calc(100% - 50px)', \n          width: '100%', \n          border: '2px solid #ccc',\n          backgroundColor: '#f0f0f0'\n        }} \n      />\n    </div>\n  );\n};\n\nexport default SimpleMapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}