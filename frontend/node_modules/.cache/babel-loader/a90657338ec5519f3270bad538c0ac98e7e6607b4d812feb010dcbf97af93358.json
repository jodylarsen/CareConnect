{"ast":null,"code":"var _jsxFileName = \"/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/SimpleMapView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleMapView = ({\n  userLocation,\n  providers = [],\n  selectedProvider,\n  onLocationChange,\n  onProviderSelect\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [status, setStatus] = useState('Initializing...');\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [markerProviderMap, setMarkerProviderMap] = useState(new Map());\n  useEffect(() => {\n    initializeMap();\n  }, []);\n  useEffect(() => {\n    if (map && providers.length > 0) {\n      addProviderMarkers();\n    }\n  }, [map, providers]);\n  useEffect(() => {\n    if (selectedProvider && map) {\n      highlightProvider(selectedProvider);\n    }\n  }, [selectedProvider, map, markerProviderMap]);\n  const initializeMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      if (!apiKey) {\n        setStatus('ERROR: Google Maps API key is missing');\n        return;\n      }\n      setStatus(`Loading Google Maps...`);\n\n      // Simple script loading approach (same as SimpleMapTest)\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        setStatus('Google Maps script loaded, creating map...');\n        if (!mapRef.current) {\n          setStatus('ERROR: Map container not found');\n          return;\n        }\n        try {\n          const defaultLocation = userLocation || {\n            lat: 40.7128,\n            lng: -74.0060\n          }; // NYC\n          const mapInstance = new google.maps.Map(mapRef.current, {\n            center: defaultLocation,\n            zoom: 13,\n            styles: [{\n              featureType: 'poi.medical',\n              elementType: 'geometry',\n              stylers: [{\n                color: '#ffeaa7'\n              }]\n            }]\n          });\n\n          // Add click listener for location selection\n          mapInstance.addListener('click', event => {\n            if (event.latLng && onLocationChange) {\n              const location = {\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng()\n              };\n              onLocationChange(location);\n            }\n          });\n          setMap(mapInstance);\n          setStatus('SUCCESS: Map created and displayed');\n        } catch (mapError) {\n          setStatus(`ERROR creating map: ${mapError}`);\n        }\n      };\n      script.onerror = () => {\n        setStatus('ERROR: Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        setStatus('Google Maps script already loaded');\n        if (window.google && window.google.maps && mapRef.current) {\n          const defaultLocation = userLocation || {\n            lat: 40.7128,\n            lng: -74.0060\n          };\n          const mapInstance = new google.maps.Map(mapRef.current, {\n            center: defaultLocation,\n            zoom: 13\n          });\n          setMap(mapInstance);\n          setStatus('SUCCESS: Map created with existing script');\n        }\n      } else {\n        document.head.appendChild(script);\n      }\n    } catch (error) {\n      setStatus(`ERROR: ${error}`);\n    }\n  };\n  const addProviderMarkers = () => {\n    if (!map) return;\n\n    // Clear existing markers\n    markers.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n\n    // Add new markers\n    const newMarkers = providers.map(provider => {\n      // Ensure we have a proper LatLng object\n      const position = new google.maps.LatLng(provider.location.lat, provider.location.lng);\n      const marker = new google.maps.Marker({\n        position: position,\n        map: map,\n        title: provider.name,\n        icon: {\n          url: getProviderIcon(provider.type),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n\n      // Add info window\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div style=\"max-width: 250px; padding: 8px;\">\n            <h3 style=\"margin: 0 0 8px 0; color: #333; font-size: 1rem;\">${provider.name}</h3>\n            <p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Type:</strong> ${provider.type}</p>\n            <p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Address:</strong> ${provider.address}</p>\n            ${provider.rating ? `<p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Rating:</strong> ${'‚≠ê'.repeat(Math.round(provider.rating))}</p>` : ''}\n            ${provider.distance ? `<p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Distance:</strong> ${provider.distance.toFixed(1)} miles</p>` : ''}\n          </div>\n        `\n      });\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n        if (onProviderSelect) {\n          onProviderSelect(provider);\n        }\n      });\n      return marker;\n    });\n    setMarkers(newMarkers);\n\n    // Adjust map bounds to show all markers\n    if (newMarkers.length > 0) {\n      try {\n        const bounds = new google.maps.LatLngBounds();\n        newMarkers.forEach(marker => {\n          const position = marker.getPosition();\n          if (position) {\n            bounds.extend(position);\n          }\n        });\n\n        // Only fit bounds if we have valid bounds\n        if (!bounds.isEmpty()) {\n          map.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error('Error setting map bounds:', error);\n        // Fallback to centering on first marker\n        if (newMarkers.length > 0) {\n          const firstPosition = newMarkers[0].getPosition();\n          if (firstPosition) {\n            map.setCenter(firstPosition);\n            map.setZoom(13);\n          }\n        }\n      }\n    }\n  };\n  const getProviderIcon = type => {\n    const iconColor = getProviderColor(type);\n    return `data:image/svg+xml;charset=UTF-8,` + encodeURIComponent(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\" fill=\"${iconColor}\" stroke=\"white\" stroke-width=\"2\"/>\n        <circle cx=\"16\" cy=\"12\" r=\"4\" fill=\"white\"/>\n        <text x=\"16\" y=\"16\" text-anchor=\"middle\" fill=\"${iconColor}\" font-size=\"8\" font-weight=\"bold\">${getProviderSymbol(type)}</text>\n      </svg>\n    `);\n  };\n  const getProviderColor = type => {\n    switch (type.toLowerCase()) {\n      case 'hospital':\n        return '#dc3545';\n      case 'urgent_care':\n        return '#fd7e14';\n      case 'pharmacy':\n        return '#28a745';\n      case 'clinic':\n        return '#007bff';\n      case 'specialist':\n        return '#6f42c1';\n      default:\n        return '#6c757d';\n    }\n  };\n  const getProviderSymbol = type => {\n    switch (type.toLowerCase()) {\n      case 'hospital':\n        return 'H';\n      case 'urgent_care':\n        return 'U';\n      case 'pharmacy':\n        return 'P';\n      case 'clinic':\n        return 'C';\n      case 'specialist':\n        return 'S';\n      default:\n        return 'M';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        background: '#f8f9fa',\n        borderBottom: '1px solid #dee2e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Map Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), \" \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: 'calc(100% - 50px)',\n        width: '100%',\n        border: '2px solid #ccc',\n        backgroundColor: '#f0f0f0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleMapView, \"BaDJH/B8jPBP7NDydZq0+TtMTYQ=\");\n_c = SimpleMapView;\nexport default SimpleMapView;\nvar _c;\n$RefreshReg$(_c, \"SimpleMapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SimpleMapView","userLocation","providers","selectedProvider","onLocationChange","onProviderSelect","_s","mapRef","status","setStatus","map","setMap","markers","setMarkers","markerProviderMap","setMarkerProviderMap","Map","initializeMap","length","addProviderMarkers","highlightProvider","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","script","document","createElement","src","async","defer","onload","current","defaultLocation","lat","lng","mapInstance","google","maps","center","zoom","styles","featureType","elementType","stylers","color","addListener","event","latLng","location","mapError","onerror","existingScript","querySelector","window","head","appendChild","error","forEach","marker","newMarkers","provider","position","LatLng","Marker","title","name","icon","url","getProviderIcon","type","scaledSize","Size","anchor","Point","infoWindow","InfoWindow","content","address","rating","repeat","Math","round","distance","toFixed","open","bounds","LatLngBounds","getPosition","extend","isEmpty","fitBounds","console","firstPosition","setCenter","setZoom","iconColor","getProviderColor","encodeURIComponent","getProviderSymbol","toLowerCase","style","height","width","children","padding","background","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/SimpleMapView.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Location } from '../services/locationService';\nimport { HealthcareProvider } from '../services/placesService';\n\ninterface SimpleMapViewProps {\n  userLocation?: Location | null;\n  providers?: HealthcareProvider[];\n  selectedProvider?: HealthcareProvider | null;\n  onLocationChange?: (location: Location) => void;\n  onProviderSelect?: (provider: HealthcareProvider) => void;\n}\n\nconst SimpleMapView: React.FC<SimpleMapViewProps> = ({\n  userLocation,\n  providers = [],\n  selectedProvider,\n  onLocationChange,\n  onProviderSelect\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [status, setStatus] = useState<string>('Initializing...');\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [markers, setMarkers] = useState<google.maps.Marker[]>([]);\n  const [markerProviderMap, setMarkerProviderMap] = useState<Map<string, { marker: google.maps.Marker, infoWindow: google.maps.InfoWindow }>>(new Map());\n\n  useEffect(() => {\n    initializeMap();\n  }, []);\n\n  useEffect(() => {\n    if (map && providers.length > 0) {\n      addProviderMarkers();\n    }\n  }, [map, providers]);\n\n  useEffect(() => {\n    if (selectedProvider && map) {\n      highlightProvider(selectedProvider);\n    }\n  }, [selectedProvider, map, markerProviderMap]);\n\n  const initializeMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      \n      if (!apiKey) {\n        setStatus('ERROR: Google Maps API key is missing');\n        return;\n      }\n\n      setStatus(`Loading Google Maps...`);\n\n      // Simple script loading approach (same as SimpleMapTest)\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n\n      script.onload = () => {\n        setStatus('Google Maps script loaded, creating map...');\n        \n        if (!mapRef.current) {\n          setStatus('ERROR: Map container not found');\n          return;\n        }\n\n        try {\n          const defaultLocation = userLocation || { lat: 40.7128, lng: -74.0060 }; // NYC\n          const mapInstance = new google.maps.Map(mapRef.current, {\n            center: defaultLocation,\n            zoom: 13,\n            styles: [\n              {\n                featureType: 'poi.medical',\n                elementType: 'geometry',\n                stylers: [{ color: '#ffeaa7' }]\n              }\n            ]\n          });\n\n          // Add click listener for location selection\n          mapInstance.addListener('click', (event: google.maps.MapMouseEvent) => {\n            if (event.latLng && onLocationChange) {\n              const location: Location = {\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng()\n              };\n              onLocationChange(location);\n            }\n          });\n\n          setMap(mapInstance);\n          setStatus('SUCCESS: Map created and displayed');\n        } catch (mapError) {\n          setStatus(`ERROR creating map: ${mapError}`);\n        }\n      };\n\n      script.onerror = () => {\n        setStatus('ERROR: Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        setStatus('Google Maps script already loaded');\n        if (window.google && window.google.maps && mapRef.current) {\n          const defaultLocation = userLocation || { lat: 40.7128, lng: -74.0060 };\n          const mapInstance = new google.maps.Map(mapRef.current, {\n            center: defaultLocation,\n            zoom: 13,\n          });\n          setMap(mapInstance);\n          setStatus('SUCCESS: Map created with existing script');\n        }\n      } else {\n        document.head.appendChild(script);\n      }\n\n    } catch (error) {\n      setStatus(`ERROR: ${error}`);\n    }\n  };\n\n  const addProviderMarkers = () => {\n    if (!map) return;\n\n    // Clear existing markers\n    markers.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n\n    // Add new markers\n    const newMarkers = providers.map(provider => {\n      // Ensure we have a proper LatLng object\n      const position = new google.maps.LatLng(provider.location.lat, provider.location.lng);\n      \n      const marker = new google.maps.Marker({\n        position: position,\n        map: map,\n        title: provider.name,\n        icon: {\n          url: getProviderIcon(provider.type),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n\n      // Add info window\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div style=\"max-width: 250px; padding: 8px;\">\n            <h3 style=\"margin: 0 0 8px 0; color: #333; font-size: 1rem;\">${provider.name}</h3>\n            <p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Type:</strong> ${provider.type}</p>\n            <p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Address:</strong> ${provider.address}</p>\n            ${provider.rating ? `<p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Rating:</strong> ${'‚≠ê'.repeat(Math.round(provider.rating))}</p>` : ''}\n            ${provider.distance ? `<p style=\"margin: 4px 0; font-size: 0.9rem; color: #555;\"><strong>Distance:</strong> ${provider.distance.toFixed(1)} miles</p>` : ''}\n          </div>\n        `\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n        if (onProviderSelect) {\n          onProviderSelect(provider);\n        }\n      });\n\n      return marker;\n    });\n\n    setMarkers(newMarkers);\n\n    // Adjust map bounds to show all markers\n    if (newMarkers.length > 0) {\n      try {\n        const bounds = new google.maps.LatLngBounds();\n        newMarkers.forEach(marker => {\n          const position = marker.getPosition();\n          if (position) {\n            bounds.extend(position);\n          }\n        });\n        \n        // Only fit bounds if we have valid bounds\n        if (!bounds.isEmpty()) {\n          map.fitBounds(bounds);\n        }\n      } catch (error) {\n        console.error('Error setting map bounds:', error);\n        // Fallback to centering on first marker\n        if (newMarkers.length > 0) {\n          const firstPosition = newMarkers[0].getPosition();\n          if (firstPosition) {\n            map.setCenter(firstPosition);\n            map.setZoom(13);\n          }\n        }\n      }\n    }\n  };\n\n  const getProviderIcon = (type: string): string => {\n    const iconColor = getProviderColor(type);\n    return `data:image/svg+xml;charset=UTF-8,` + encodeURIComponent(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\" fill=\"${iconColor}\" stroke=\"white\" stroke-width=\"2\"/>\n        <circle cx=\"16\" cy=\"12\" r=\"4\" fill=\"white\"/>\n        <text x=\"16\" y=\"16\" text-anchor=\"middle\" fill=\"${iconColor}\" font-size=\"8\" font-weight=\"bold\">${getProviderSymbol(type)}</text>\n      </svg>\n    `);\n  };\n\n  const getProviderColor = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return '#dc3545';\n      case 'urgent_care': return '#fd7e14';\n      case 'pharmacy': return '#28a745';\n      case 'clinic': return '#007bff';\n      case 'specialist': return '#6f42c1';\n      default: return '#6c757d';\n    }\n  };\n\n  const getProviderSymbol = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return 'H';\n      case 'urgent_care': return 'U';\n      case 'pharmacy': return 'P';\n      case 'clinic': return 'C';\n      case 'specialist': return 'S';\n      default: return 'M';\n    }\n  };\n\n  return (\n    <div style={{ height: '100%', width: '100%' }}>\n      <div style={{ padding: '10px', background: '#f8f9fa', borderBottom: '1px solid #dee2e6' }}>\n        <strong>Map Status:</strong> {status}\n      </div>\n      <div \n        ref={mapRef} \n        style={{ \n          height: 'calc(100% - 50px)', \n          width: '100%', \n          border: '2px solid #ccc',\n          backgroundColor: '#f0f0f0'\n        }} \n      />\n    </div>\n  );\n};\n\nexport default SimpleMapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}