{"ast":null,"code":"var _jsxFileName = \"/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/SimpleMapTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleMapTest = () => {\n  _s();\n  const mapRef = useRef(null);\n  const [status, setStatus] = useState('Initializing...');\n  useEffect(() => {\n    initializeSimpleMap();\n  }, []);\n  const initializeSimpleMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      if (!apiKey) {\n        setStatus('ERROR: Google Maps API key is missing');\n        return;\n      }\n      setStatus(`API Key found: ${apiKey.substring(0, 10)}...`);\n\n      // Simple script loading approach\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        setStatus('Google Maps script loaded successfully');\n        if (!mapRef.current) {\n          setStatus('ERROR: Map container not found');\n          return;\n        }\n        try {\n          const map = new google.maps.Map(mapRef.current, {\n            center: {\n              lat: 40.7128,\n              lng: -74.0060\n            },\n            // New York\n            zoom: 13\n          });\n          setStatus('SUCCESS: Map created and displayed');\n        } catch (mapError) {\n          setStatus(`ERROR creating map: ${mapError}`);\n        }\n      };\n      script.onerror = () => {\n        setStatus('ERROR: Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        setStatus('Google Maps script already loaded');\n        if (window.google && window.google.maps) {\n          const map = new google.maps.Map(mapRef.current, {\n            center: {\n              lat: 40.7128,\n              lng: -74.0060\n            },\n            zoom: 13\n          });\n          setStatus('SUCCESS: Map created with existing script');\n        }\n      } else {\n        document.head.appendChild(script);\n      }\n    } catch (error) {\n      setStatus(`ERROR: ${error}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Simple Google Maps Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this), \" \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: '400px',\n        width: '100%',\n        border: '2px solid #ccc',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleMapTest, \"FzkM+ZgexUnps7DUJE6BKm9hMx8=\");\n_c = SimpleMapTest;\nexport default SimpleMapTest;\nvar _c;\n$RefreshReg$(_c, \"SimpleMapTest\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SimpleMapTest","_s","mapRef","status","setStatus","initializeSimpleMap","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","substring","script","document","createElement","src","async","defer","onload","current","map","google","maps","Map","center","lat","lng","zoom","mapError","onerror","existingScript","querySelector","window","head","appendChild","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","width","border","marginTop","_c","$RefreshReg$"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/SimpleMapTest.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst SimpleMapTest: React.FC = () => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [status, setStatus] = useState<string>('Initializing...');\n\n  useEffect(() => {\n    initializeSimpleMap();\n  }, []);\n\n  const initializeSimpleMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      \n      if (!apiKey) {\n        setStatus('ERROR: Google Maps API key is missing');\n        return;\n      }\n\n      setStatus(`API Key found: ${apiKey.substring(0, 10)}...`);\n\n      // Simple script loading approach\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.defer = true;\n\n      script.onload = () => {\n        setStatus('Google Maps script loaded successfully');\n        \n        if (!mapRef.current) {\n          setStatus('ERROR: Map container not found');\n          return;\n        }\n\n        try {\n          const map = new google.maps.Map(mapRef.current, {\n            center: { lat: 40.7128, lng: -74.0060 }, // New York\n            zoom: 13,\n          });\n\n          setStatus('SUCCESS: Map created and displayed');\n        } catch (mapError) {\n          setStatus(`ERROR creating map: ${mapError}`);\n        }\n      };\n\n      script.onerror = () => {\n        setStatus('ERROR: Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (existingScript) {\n        setStatus('Google Maps script already loaded');\n        if (window.google && window.google.maps) {\n          const map = new google.maps.Map(mapRef.current!, {\n            center: { lat: 40.7128, lng: -74.0060 },\n            zoom: 13,\n          });\n          setStatus('SUCCESS: Map created with existing script');\n        }\n      } else {\n        document.head.appendChild(script);\n      }\n\n    } catch (error) {\n      setStatus(`ERROR: ${error}`);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h3>Simple Google Maps Test</h3>\n      <p><strong>Status:</strong> {status}</p>\n      <div \n        ref={mapRef} \n        style={{ \n          height: '400px', \n          width: '100%', \n          border: '2px solid #ccc',\n          marginTop: '20px'\n        }} \n      />\n    </div>\n  );\n};\n\nexport default SimpleMapTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}