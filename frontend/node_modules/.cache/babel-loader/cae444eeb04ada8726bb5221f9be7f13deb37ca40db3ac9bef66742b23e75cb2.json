{"ast":null,"code":"var _jsxFileName = \"/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/APITest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport './APITest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APITest = () => {\n  _s();\n  const [testResults, setTestResults] = useState([{\n    name: 'Google OAuth 2.0',\n    status: 'testing',\n    message: 'Checking OAuth configuration...'\n  }, {\n    name: 'Google Maps JavaScript API',\n    status: 'testing',\n    message: 'Loading Maps API...'\n  }, {\n    name: 'Google Places API',\n    status: 'testing',\n    message: 'Testing Places service...'\n  }, {\n    name: 'Google Geolocation API',\n    status: 'testing',\n    message: 'Testing Geolocation...'\n  }, {\n    name: 'Google Geocoding API',\n    status: 'testing',\n    message: 'Testing Geocoding service...'\n  }]);\n  const updateTestResult = (index, status, message, details) => {\n    setTestResults(prev => prev.map((result, i) => i === index ? {\n      ...result,\n      status,\n      message,\n      details\n    } : result));\n  };\n  useEffect(() => {\n    runAPITests();\n  }, []);\n  const runAPITests = async () => {\n    // Test 1: Google OAuth 2.0\n    testOAuth();\n\n    // Test 2-5: Google Maps APIs\n    await testGoogleMapsAPIs();\n  };\n  const testOAuth = () => {\n    try {\n      const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n      if (!clientId) {\n        updateTestResult(0, 'error', 'Client ID not found in environment variables');\n        return;\n      }\n      if (clientId.includes('apps.googleusercontent.com')) {\n        updateTestResult(0, 'success', `OAuth Client ID configured: ${clientId.substring(0, 20)}...`);\n      } else {\n        updateTestResult(0, 'error', 'Invalid OAuth Client ID format');\n      }\n    } catch (error) {\n      updateTestResult(0, 'error', `OAuth test failed: ${error}`);\n    }\n  };\n  const testGoogleMapsAPIs = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      if (!apiKey) {\n        updateTestResult(1, 'error', 'Maps API key not found');\n        updateTestResult(2, 'error', 'Places API requires Maps API key');\n        updateTestResult(3, 'error', 'Geolocation API requires Maps API key');\n        updateTestResult(4, 'error', 'Geocoding API requires Maps API key');\n        return;\n      }\n\n      // Test Maps JavaScript API\n      try {\n        const loader = new Loader({\n          apiKey: apiKey,\n          version: 'weekly',\n          libraries: ['places', 'geometry']\n        });\n        const google = await loader.load();\n        updateTestResult(1, 'success', 'Maps JavaScript API loaded successfully');\n\n        // Test Places API\n        try {\n          const service = new google.maps.places.PlacesService(document.createElement('div'));\n          updateTestResult(2, 'success', 'Places API service initialized');\n        } catch (error) {\n          updateTestResult(2, 'error', `Places API error: ${error}`);\n        }\n\n        // Test Geolocation API\n        testGeolocation();\n\n        // Test Geocoding API\n        try {\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode({\n            address: 'New York, NY'\n          }, (results, status) => {\n            if (status === 'OK' && results && results[0]) {\n              updateTestResult(4, 'success', `Geocoding API working: ${results[0].formatted_address}`);\n            } else {\n              updateTestResult(4, 'error', `Geocoding failed: ${status}`);\n            }\n          });\n        } catch (error) {\n          updateTestResult(4, 'error', `Geocoding API error: ${error}`);\n        }\n      } catch (error) {\n        updateTestResult(1, 'error', `Maps API loading failed: ${error}`);\n        updateTestResult(2, 'error', 'Cannot test Places API - Maps API failed');\n        updateTestResult(4, 'error', 'Cannot test Geocoding API - Maps API failed');\n      }\n    } catch (error) {\n      console.error('API testing error:', error);\n    }\n  };\n  const testGeolocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        updateTestResult(3, 'success', `Geolocation working: ${position.coords.latitude.toFixed(4)}, ${position.coords.longitude.toFixed(4)}`);\n      }, error => {\n        let errorMessage = 'Unknown geolocation error';\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage = 'User denied location permission';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            errorMessage = 'Location information unavailable';\n            break;\n          case error.TIMEOUT:\n            errorMessage = 'Location request timeout';\n            break;\n        }\n        updateTestResult(3, 'error', `Geolocation error: ${errorMessage}`);\n      }, {\n        timeout: 10000\n      });\n    } else {\n      updateTestResult(3, 'error', 'Geolocation not supported by browser');\n    }\n  };\n  const retryTest = index => {\n    const updatedResults = [...testResults];\n    updatedResults[index] = {\n      ...updatedResults[index],\n      status: 'testing',\n      message: 'Retrying...'\n    };\n    setTestResults(updatedResults);\n    setTimeout(() => {\n      switch (index) {\n        case 0:\n          testOAuth();\n          break;\n        case 1:\n        case 2:\n        case 4:\n          testGoogleMapsAPIs();\n          break;\n        case 3:\n          testGeolocation();\n          break;\n      }\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"api-test\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD27 API Connection Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Testing connections to all required Google APIs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-results\",\n      children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `test-item ${result.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-icon ${result.status}`,\n            children: [result.status === 'testing' && '⏳', result.status === 'success' && '✅', result.status === 'error' && '❌']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), result.status === 'error' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-btn\",\n            onClick: () => retryTest(index),\n            title: \"Retry test\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"test-message\",\n          children: result.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), result.details && /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"test-details\",\n          children: JSON.stringify(result.details, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"environment-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD27 Environment Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"env-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Client ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), \" \", process.env.REACT_APP_GOOGLE_CLIENT_ID ? '✅ Set' : '❌ Missing']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"env-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Maps API Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), \" \", process.env.REACT_APP_GOOGLE_MAPS_API_KEY ? '✅ Set' : '❌ Missing']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"env-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Redirect URI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), \" \", process.env.REACT_APP_GOOGLE_REDIRECT_URI || 'Default: http://localhost:3000/auth/callback']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: runAPITests,\n        children: \"\\uD83D\\uDD04 Run All Tests Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(APITest, \"WIOvHVPO8njcmT7it0XQbgWCTDE=\");\n_c = APITest;\nexport default APITest;\nvar _c;\n$RefreshReg$(_c, \"APITest\");","map":{"version":3,"names":["React","useState","useEffect","Loader","jsxDEV","_jsxDEV","APITest","_s","testResults","setTestResults","name","status","message","updateTestResult","index","details","prev","map","result","i","runAPITests","testOAuth","testGoogleMapsAPIs","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","includes","substring","error","apiKey","REACT_APP_GOOGLE_MAPS_API_KEY","loader","version","libraries","google","load","service","maps","places","PlacesService","document","createElement","testGeolocation","geocoder","Geocoder","geocode","address","results","formatted_address","console","navigator","geolocation","getCurrentPosition","position","coords","latitude","toFixed","longitude","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","timeout","retryTest","updatedResults","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","JSON","stringify","REACT_APP_GOOGLE_REDIRECT_URI","_c","$RefreshReg$"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/APITest.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport './APITest.css';\n\ninterface APITestResult {\n  name: string;\n  status: 'testing' | 'success' | 'error';\n  message: string;\n  details?: any;\n}\n\nconst APITest: React.FC = () => {\n  const [testResults, setTestResults] = useState<APITestResult[]>([\n    { name: 'Google OAuth 2.0', status: 'testing', message: 'Checking OAuth configuration...' },\n    { name: 'Google Maps JavaScript API', status: 'testing', message: 'Loading Maps API...' },\n    { name: 'Google Places API', status: 'testing', message: 'Testing Places service...' },\n    { name: 'Google Geolocation API', status: 'testing', message: 'Testing Geolocation...' },\n    { name: 'Google Geocoding API', status: 'testing', message: 'Testing Geocoding service...' }\n  ]);\n\n  const updateTestResult = (index: number, status: 'success' | 'error', message: string, details?: any) => {\n    setTestResults(prev => prev.map((result, i) => \n      i === index ? { ...result, status, message, details } : result\n    ));\n  };\n\n  useEffect(() => {\n    runAPITests();\n  }, []);\n\n  const runAPITests = async () => {\n    // Test 1: Google OAuth 2.0\n    testOAuth();\n    \n    // Test 2-5: Google Maps APIs\n    await testGoogleMapsAPIs();\n  };\n\n  const testOAuth = () => {\n    try {\n      const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n      if (!clientId) {\n        updateTestResult(0, 'error', 'Client ID not found in environment variables');\n        return;\n      }\n\n      if (clientId.includes('apps.googleusercontent.com')) {\n        updateTestResult(0, 'success', `OAuth Client ID configured: ${clientId.substring(0, 20)}...`);\n      } else {\n        updateTestResult(0, 'error', 'Invalid OAuth Client ID format');\n      }\n    } catch (error) {\n      updateTestResult(0, 'error', `OAuth test failed: ${error}`);\n    }\n  };\n\n  const testGoogleMapsAPIs = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      if (!apiKey) {\n        updateTestResult(1, 'error', 'Maps API key not found');\n        updateTestResult(2, 'error', 'Places API requires Maps API key');\n        updateTestResult(3, 'error', 'Geolocation API requires Maps API key');\n        updateTestResult(4, 'error', 'Geocoding API requires Maps API key');\n        return;\n      }\n\n      // Test Maps JavaScript API\n      try {\n        const loader = new Loader({\n          apiKey: apiKey,\n          version: 'weekly',\n          libraries: ['places', 'geometry']\n        });\n\n        const google = await loader.load();\n        updateTestResult(1, 'success', 'Maps JavaScript API loaded successfully');\n\n        // Test Places API\n        try {\n          const service = new google.maps.places.PlacesService(document.createElement('div'));\n          updateTestResult(2, 'success', 'Places API service initialized');\n        } catch (error) {\n          updateTestResult(2, 'error', `Places API error: ${error}`);\n        }\n\n        // Test Geolocation API\n        testGeolocation();\n\n        // Test Geocoding API\n        try {\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode({ address: 'New York, NY' }, (results, status) => {\n            if (status === 'OK' && results && results[0]) {\n              updateTestResult(4, 'success', `Geocoding API working: ${results[0].formatted_address}`);\n            } else {\n              updateTestResult(4, 'error', `Geocoding failed: ${status}`);\n            }\n          });\n        } catch (error) {\n          updateTestResult(4, 'error', `Geocoding API error: ${error}`);\n        }\n\n      } catch (error) {\n        updateTestResult(1, 'error', `Maps API loading failed: ${error}`);\n        updateTestResult(2, 'error', 'Cannot test Places API - Maps API failed');\n        updateTestResult(4, 'error', 'Cannot test Geocoding API - Maps API failed');\n      }\n    } catch (error) {\n      console.error('API testing error:', error);\n    }\n  };\n\n  const testGeolocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          updateTestResult(3, 'success', \n            `Geolocation working: ${position.coords.latitude.toFixed(4)}, ${position.coords.longitude.toFixed(4)}`\n          );\n        },\n        (error) => {\n          let errorMessage = 'Unknown geolocation error';\n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              errorMessage = 'User denied location permission';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              errorMessage = 'Location information unavailable';\n              break;\n            case error.TIMEOUT:\n              errorMessage = 'Location request timeout';\n              break;\n          }\n          updateTestResult(3, 'error', `Geolocation error: ${errorMessage}`);\n        },\n        { timeout: 10000 }\n      );\n    } else {\n      updateTestResult(3, 'error', 'Geolocation not supported by browser');\n    }\n  };\n\n  const retryTest = (index: number) => {\n    const updatedResults = [...testResults];\n    updatedResults[index] = { ...updatedResults[index], status: 'testing', message: 'Retrying...' };\n    setTestResults(updatedResults);\n\n    setTimeout(() => {\n      switch (index) {\n        case 0:\n          testOAuth();\n          break;\n        case 1:\n        case 2:\n        case 4:\n          testGoogleMapsAPIs();\n          break;\n        case 3:\n          testGeolocation();\n          break;\n      }\n    }, 500);\n  };\n\n  return (\n    <div className=\"api-test\">\n      <h2>🔧 API Connection Tests</h2>\n      <p>Testing connections to all required Google APIs...</p>\n\n      <div className=\"test-results\">\n        {testResults.map((result, index) => (\n          <div key={index} className={`test-item ${result.status}`}>\n            <div className=\"test-header\">\n              <span className={`status-icon ${result.status}`}>\n                {result.status === 'testing' && '⏳'}\n                {result.status === 'success' && '✅'}\n                {result.status === 'error' && '❌'}\n              </span>\n              <h3>{result.name}</h3>\n              {result.status === 'error' && (\n                <button \n                  className=\"retry-btn\" \n                  onClick={() => retryTest(index)}\n                  title=\"Retry test\"\n                >\n                  🔄\n                </button>\n              )}\n            </div>\n            <p className=\"test-message\">{result.message}</p>\n            {result.details && (\n              <pre className=\"test-details\">{JSON.stringify(result.details, null, 2)}</pre>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"environment-info\">\n        <h3>🔧 Environment Configuration</h3>\n        <div className=\"env-item\">\n          <strong>Client ID:</strong> {process.env.REACT_APP_GOOGLE_CLIENT_ID ? '✅ Set' : '❌ Missing'}\n        </div>\n        <div className=\"env-item\">\n          <strong>Maps API Key:</strong> {process.env.REACT_APP_GOOGLE_MAPS_API_KEY ? '✅ Set' : '❌ Missing'}\n        </div>\n        <div className=\"env-item\">\n          <strong>Redirect URI:</strong> {process.env.REACT_APP_GOOGLE_REDIRECT_URI || 'Default: http://localhost:3000/auth/callback'}\n        </div>\n      </div>\n\n      <div className=\"test-actions\">\n        <button \n          className=\"btn btn-primary\" \n          onClick={runAPITests}\n        >\n          🔄 Run All Tests Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default APITest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}