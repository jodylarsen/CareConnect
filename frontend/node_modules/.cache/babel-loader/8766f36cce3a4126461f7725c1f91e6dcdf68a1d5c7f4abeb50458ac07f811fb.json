{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./MapView.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MapView=_ref=>{let{userLocation,providers=[],onLocationChange,onProviderSelect}=_ref;const mapRef=useRef(null);const[map,setMap]=useState(null);const[markers,setMarkers]=useState([]);const[userMarker,setUserMarker]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{// Use a more robust mounting approach with multiple checks\nconst checkAndInitialize=()=>{if(mapRef.current){initializeMap();}else{// Keep checking until the ref is available\nsetTimeout(checkAndInitialize,50);}};// Start checking after a brief delay\nconst timer=setTimeout(checkAndInitialize,100);return()=>clearTimeout(timer);},[]);// eslint-disable-line react-hooks/exhaustive-deps\nuseEffect(()=>{if(map&&userLocation){updateUserLocation(userLocation);}},[map,userLocation]);// eslint-disable-line react-hooks/exhaustive-deps\nuseEffect(()=>{if(map){updateProviderMarkers(providers);}},[map,providers]);// eslint-disable-line react-hooks/exhaustive-deps\nconst initializeMap=async()=>{try{const apiKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;console.log('Initializing map with API key:',apiKey?'Present':'Missing');console.log('Map ref current:',mapRef.current?'Available':'Not available');if(!apiKey){throw new Error('Google Maps API key is missing. Please check your .env file.');}if(!mapRef.current){throw new Error('Map container ref not available during initialization');}// Check if Google Maps is already loaded\nif(window.google&&window.google.maps){console.log('Google Maps already loaded, creating map...');createMapInstance();return;}// Load Google Maps script directly (same as working test)\nconst script=document.createElement('script');script.src=\"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey,\"&libraries=places,geometry\");script.async=true;script.defer=true;script.onload=()=>{console.log('Google Maps script loaded successfully');// Add a small delay to ensure everything is ready\nsetTimeout(createMapInstance,100);};script.onerror=()=>{throw new Error('Failed to load Google Maps script');};// Check if script already exists\nconst existingScript=document.querySelector('script[src*=\"maps.googleapis.com\"]');if(!existingScript){document.head.appendChild(script);console.log('Loading Google Maps script...');}else{console.log('Google Maps script already in DOM');if(window.google&&window.google.maps){setTimeout(createMapInstance,100);}}}catch(err){console.error('Map initialization error:',err);setError(\"Failed to initialize map: \".concat(err));setLoading(false);}};const createMapInstance=()=>{try{if(!mapRef.current){console.error('Map container ref not found in createMapInstance');setError('Map container not found');setLoading(false);return;}// Default to New York if no user location\nconst defaultLocation=userLocation||{lat:40.7128,lng:-74.0060};console.log('Creating map at location:',defaultLocation);const mapInstance=new google.maps.Map(mapRef.current,{center:defaultLocation,zoom:13,styles:[{featureType:'poi.medical',elementType:'geometry',stylers:[{color:'#ffeaa7'}]}]});// Add click listener for location selection\nmapInstance.addListener('click',event=>{if(event.latLng&&onLocationChange){const location={lat:event.latLng.lat(),lng:event.latLng.lng()};// Reverse geocode to get address\nconst geocoder=new google.maps.Geocoder();geocoder.geocode({location:event.latLng},(results,status)=>{if(status==='OK'&&results&&results[0]){location.address=results[0].formatted_address;}onLocationChange(location);});}});console.log('Map instance created successfully');setMap(mapInstance);setLoading(false);}catch(err){console.error('Error creating map instance:',err);setError(\"Failed to create map: \".concat(err));setLoading(false);}};const updateUserLocation=location=>{if(!map)return;// Remove existing user marker\nif(userMarker){userMarker.setMap(null);}// Create new user marker\nconst marker=new google.maps.Marker({position:location,map:map,title:'Your Location',icon:{url:'data:image/svg+xml;charset=UTF-8,'+encodeURIComponent(\"\\n          <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n            <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"8\\\" fill=\\\"#007bff\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\"/>\\n            <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"3\\\" fill=\\\"white\\\"/>\\n          </svg>\\n        \"),scaledSize:new google.maps.Size(24,24),anchor:new google.maps.Point(12,12)}});setUserMarker(marker);// Center map on user location\nmap.setCenter(location);};const updateProviderMarkers=providers=>{if(!map)return;// Clear existing markers\nmarkers.forEach(marker=>marker.setMap(null));// Create new markers\nconst newMarkers=providers.map((provider,index)=>{const marker=new google.maps.Marker({position:provider.location,map:map,title:provider.name,icon:{url:getProviderIcon(provider.type),scaledSize:new google.maps.Size(32,32),anchor:new google.maps.Point(16,32)}});// Create info window\nconst infoWindow=new google.maps.InfoWindow({content:\"\\n          <div class=\\\"marker-info\\\">\\n            <h3>\".concat(provider.name,\"</h3>\\n            <p><strong>Type:</strong> \").concat(provider.type,\"</p>\\n            <p><strong>Address:</strong> \").concat(provider.address,\"</p>\\n            \").concat(provider.rating?\"<p><strong>Rating:</strong> \".concat('‚≠ê'.repeat(Math.round(provider.rating)),\"</p>\"):'',\"\\n            \").concat(provider.distance?\"<p><strong>Distance:</strong> \".concat(provider.distance.toFixed(1),\" miles</p>\"):'',\"\\n            <button onclick=\\\"window.selectProvider('\").concat(provider.placeId||provider.id,\"')\\\" class=\\\"select-btn\\\">\\n              Select Provider\\n            </button>\\n          </div>\\n        \")});marker.addListener('click',()=>{infoWindow.open(map,marker);});return marker;});setMarkers(newMarkers);// Set up global function for provider selection\nwindow.selectProvider=providerId=>{const provider=providers.find(p=>p.placeId===providerId||p.id===providerId);if(provider&&onProviderSelect){onProviderSelect(provider);}};// Adjust map bounds to show all markers\nif(newMarkers.length>0){const bounds=new google.maps.LatLngBounds();newMarkers.forEach(marker=>{const position=marker.getPosition();if(position)bounds.extend(position);});if(userMarker){const userPosition=userMarker.getPosition();if(userPosition)bounds.extend(userPosition);}map.fitBounds(bounds);}};const getProviderIcon=type=>{const iconColor=getProviderColor(type);return\"data:image/svg+xml;charset=UTF-8,\"+encodeURIComponent(\"\\n      <svg width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <path d=\\\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\\\" fill=\\\"\".concat(iconColor,\"\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\"/>\\n        <circle cx=\\\"16\\\" cy=\\\"12\\\" r=\\\"4\\\" fill=\\\"white\\\"/>\\n        <text x=\\\"16\\\" y=\\\"16\\\" text-anchor=\\\"middle\\\" fill=\\\"\").concat(iconColor,\"\\\" font-size=\\\"8\\\" font-weight=\\\"bold\\\">\").concat(getProviderSymbol(type),\"</text>\\n      </svg>\\n    \"));};const getProviderColor=type=>{switch(type.toLowerCase()){case'hospital':return'#dc3545';case'urgent_care':return'#fd7e14';case'pharmacy':return'#28a745';case'clinic':return'#007bff';case'specialist':return'#6f42c1';default:return'#6c757d';}};const getProviderSymbol=type=>{switch(type.toLowerCase()){case'hospital':return'H';case'urgent_care':return'U';case'pharmacy':return'P';case'clinic':return'C';case'specialist':return'S';default:return'M';}};const getCurrentLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{const location={lat:position.coords.latitude,lng:position.coords.longitude};if(onLocationChange){onLocationChange(location);}},error=>{setError(\"Geolocation error: \".concat(error.message));},{timeout:10000,enableHighAccuracy:true});}else{setError('Geolocation is not supported by this browser');}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"map-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading map...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"map-error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Error loading map: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Retry\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"location-btn\",onClick:getCurrentLocation,title:\"Get current location\",children:\"\\uD83D\\uDCCD Current Location\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"map-legend\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color\",style:{backgroundColor:'#007bff'}}),\"Your Location\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color\",style:{backgroundColor:'#dc3545'}}),\"Hospital\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color\",style:{backgroundColor:'#fd7e14'}}),\"Urgent Care\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color\",style:{backgroundColor:'#28a745'}}),\"Pharmacy\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:mapRef,className:\"map-display\"})]});};export default MapView;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","MapView","_ref","userLocation","providers","onLocationChange","onProviderSelect","mapRef","map","setMap","markers","setMarkers","userMarker","setUserMarker","loading","setLoading","error","setError","checkAndInitialize","current","initializeMap","setTimeout","timer","clearTimeout","updateUserLocation","updateProviderMarkers","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","console","log","Error","window","google","maps","createMapInstance","script","document","createElement","src","concat","async","defer","onload","onerror","existingScript","querySelector","head","appendChild","err","defaultLocation","lat","lng","mapInstance","Map","center","zoom","styles","featureType","elementType","stylers","color","addListener","event","latLng","location","geocoder","Geocoder","geocode","results","status","address","formatted_address","marker","Marker","position","title","icon","url","encodeURIComponent","scaledSize","Size","anchor","Point","setCenter","forEach","newMarkers","provider","index","name","getProviderIcon","type","infoWindow","InfoWindow","content","rating","repeat","Math","round","distance","toFixed","placeId","id","open","selectProvider","providerId","find","p","length","bounds","LatLngBounds","getPosition","extend","userPosition","fitBounds","iconColor","getProviderColor","getProviderSymbol","toLowerCase","getCurrentLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","message","timeout","enableHighAccuracy","className","children","onClick","reload","style","backgroundColor","ref"],"sources":["/Users/hz317604/Library/CloudStorage/OneDrive-TheHertzCorporation/Documents/Repos/CareConnect/frontend/src/components/MapView.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Location } from '../services/locationService';\nimport { HealthcareProvider } from '../services/placesService';\nimport './MapView.css';\n\ninterface MapViewProps {\n  userLocation?: Location | null;\n  providers?: HealthcareProvider[];\n  onLocationChange?: (location: Location) => void;\n  onProviderSelect?: (provider: HealthcareProvider) => void;\n}\n\nconst MapView: React.FC<MapViewProps> = ({\n  userLocation,\n  providers = [],\n  onLocationChange,\n  onProviderSelect\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [markers, setMarkers] = useState<google.maps.Marker[]>([]);\n  const [userMarker, setUserMarker] = useState<google.maps.Marker | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Use a more robust mounting approach with multiple checks\n    const checkAndInitialize = () => {\n      if (mapRef.current) {\n        initializeMap();\n      } else {\n        // Keep checking until the ref is available\n        setTimeout(checkAndInitialize, 50);\n      }\n    };\n    \n    // Start checking after a brief delay\n    const timer = setTimeout(checkAndInitialize, 100);\n    \n    return () => clearTimeout(timer);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (map && userLocation) {\n      updateUserLocation(userLocation);\n    }\n  }, [map, userLocation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (map) {\n      updateProviderMarkers(providers);\n    }\n  }, [map, providers]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const initializeMap = async () => {\n    try {\n      const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n      console.log('Initializing map with API key:', apiKey ? 'Present' : 'Missing');\n      console.log('Map ref current:', mapRef.current ? 'Available' : 'Not available');\n      \n      if (!apiKey) {\n        throw new Error('Google Maps API key is missing. Please check your .env file.');\n      }\n\n      if (!mapRef.current) {\n        throw new Error('Map container ref not available during initialization');\n      }\n\n      // Check if Google Maps is already loaded\n      if (window.google && window.google.maps) {\n        console.log('Google Maps already loaded, creating map...');\n        createMapInstance();\n        return;\n      }\n\n      // Load Google Maps script directly (same as working test)\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places,geometry`;\n      script.async = true;\n      script.defer = true;\n\n      script.onload = () => {\n        console.log('Google Maps script loaded successfully');\n        // Add a small delay to ensure everything is ready\n        setTimeout(createMapInstance, 100);\n      };\n\n      script.onerror = () => {\n        throw new Error('Failed to load Google Maps script');\n      };\n\n      // Check if script already exists\n      const existingScript = document.querySelector('script[src*=\"maps.googleapis.com\"]');\n      if (!existingScript) {\n        document.head.appendChild(script);\n        console.log('Loading Google Maps script...');\n      } else {\n        console.log('Google Maps script already in DOM');\n        if (window.google && window.google.maps) {\n          setTimeout(createMapInstance, 100);\n        }\n      }\n    } catch (err) {\n      console.error('Map initialization error:', err);\n      setError(`Failed to initialize map: ${err}`);\n      setLoading(false);\n    }\n  };\n\n  const createMapInstance = () => {\n    try {\n      if (!mapRef.current) {\n        console.error('Map container ref not found in createMapInstance');\n        setError('Map container not found');\n        setLoading(false);\n        return;\n      }\n\n      // Default to New York if no user location\n      const defaultLocation = userLocation || { lat: 40.7128, lng: -74.0060 };\n      console.log('Creating map at location:', defaultLocation);\n\n      const mapInstance = new google.maps.Map(mapRef.current, {\n        center: defaultLocation,\n        zoom: 13,\n        styles: [\n          {\n            featureType: 'poi.medical',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffeaa7' }]\n          }\n        ]\n      });\n\n      // Add click listener for location selection\n      mapInstance.addListener('click', (event: google.maps.MapMouseEvent) => {\n        if (event.latLng && onLocationChange) {\n          const location: Location = {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          };\n          \n          // Reverse geocode to get address\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode({ location: event.latLng }, (results, status) => {\n            if (status === 'OK' && results && results[0]) {\n              location.address = results[0].formatted_address;\n            }\n            onLocationChange(location);\n          });\n        }\n      });\n\n      console.log('Map instance created successfully');\n      setMap(mapInstance);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error creating map instance:', err);\n      setError(`Failed to create map: ${err}`);\n      setLoading(false);\n    }\n  };\n\n  const updateUserLocation = (location: Location) => {\n    if (!map) return;\n\n    // Remove existing user marker\n    if (userMarker) {\n      userMarker.setMap(null);\n    }\n\n    // Create new user marker\n    const marker = new google.maps.Marker({\n      position: location,\n      map: map,\n      title: 'Your Location',\n      icon: {\n        url: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"12\" cy=\"12\" r=\"8\" fill=\"#007bff\" stroke=\"white\" stroke-width=\"2\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"3\" fill=\"white\"/>\n          </svg>\n        `),\n        scaledSize: new google.maps.Size(24, 24),\n        anchor: new google.maps.Point(12, 12)\n      }\n    });\n\n    setUserMarker(marker);\n\n    // Center map on user location\n    map.setCenter(location);\n  };\n\n  const updateProviderMarkers = (providers: HealthcareProvider[]) => {\n    if (!map) return;\n\n    // Clear existing markers\n    markers.forEach(marker => marker.setMap(null));\n\n    // Create new markers\n    const newMarkers = providers.map((provider, index) => {\n      const marker = new google.maps.Marker({\n        position: provider.location,\n        map: map,\n        title: provider.name,\n        icon: {\n          url: getProviderIcon(provider.type),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n\n      // Create info window\n      const infoWindow = new google.maps.InfoWindow({\n        content: `\n          <div class=\"marker-info\">\n            <h3>${provider.name}</h3>\n            <p><strong>Type:</strong> ${provider.type}</p>\n            <p><strong>Address:</strong> ${provider.address}</p>\n            ${provider.rating ? `<p><strong>Rating:</strong> ${'‚≠ê'.repeat(Math.round(provider.rating))}</p>` : ''}\n            ${provider.distance ? `<p><strong>Distance:</strong> ${provider.distance.toFixed(1)} miles</p>` : ''}\n            <button onclick=\"window.selectProvider('${provider.placeId || provider.id}')\" class=\"select-btn\">\n              Select Provider\n            </button>\n          </div>\n        `\n      });\n\n      marker.addListener('click', () => {\n        infoWindow.open(map, marker);\n      });\n\n      return marker;\n    });\n\n    setMarkers(newMarkers);\n\n    // Set up global function for provider selection\n    (window as any).selectProvider = (providerId: string) => {\n      const provider = providers.find(p => p.placeId === providerId || p.id === providerId);\n      if (provider && onProviderSelect) {\n        onProviderSelect(provider);\n      }\n    };\n\n    // Adjust map bounds to show all markers\n    if (newMarkers.length > 0) {\n      const bounds = new google.maps.LatLngBounds();\n      newMarkers.forEach(marker => {\n        const position = marker.getPosition();\n        if (position) bounds.extend(position);\n      });\n      \n      if (userMarker) {\n        const userPosition = userMarker.getPosition();\n        if (userPosition) bounds.extend(userPosition);\n      }\n\n      map.fitBounds(bounds);\n    }\n  };\n\n  const getProviderIcon = (type: string): string => {\n    const iconColor = getProviderColor(type);\n    return `data:image/svg+xml;charset=UTF-8,` + encodeURIComponent(`\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16 2C10.48 2 6 6.48 6 12C6 20 16 30 16 30S26 20 26 12C26 6.48 21.52 2 16 2Z\" fill=\"${iconColor}\" stroke=\"white\" stroke-width=\"2\"/>\n        <circle cx=\"16\" cy=\"12\" r=\"4\" fill=\"white\"/>\n        <text x=\"16\" y=\"16\" text-anchor=\"middle\" fill=\"${iconColor}\" font-size=\"8\" font-weight=\"bold\">${getProviderSymbol(type)}</text>\n      </svg>\n    `);\n  };\n\n  const getProviderColor = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return '#dc3545';\n      case 'urgent_care': return '#fd7e14';\n      case 'pharmacy': return '#28a745';\n      case 'clinic': return '#007bff';\n      case 'specialist': return '#6f42c1';\n      default: return '#6c757d';\n    }\n  };\n\n  const getProviderSymbol = (type: string): string => {\n    switch (type.toLowerCase()) {\n      case 'hospital': return 'H';\n      case 'urgent_care': return 'U';\n      case 'pharmacy': return 'P';\n      case 'clinic': return 'C';\n      case 'specialist': return 'S';\n      default: return 'M';\n    }\n  };\n\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const location: Location = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          \n          if (onLocationChange) {\n            onLocationChange(location);\n          }\n        },\n        (error) => {\n          setError(`Geolocation error: ${error.message}`);\n        },\n        { timeout: 10000, enableHighAccuracy: true }\n      );\n    } else {\n      setError('Geolocation is not supported by this browser');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"map-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading map...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"map-error\">\n        <p>Error loading map: {error}</p>\n        <button onClick={() => window.location.reload()}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-controls\">\n        <button \n          className=\"location-btn\"\n          onClick={getCurrentLocation}\n          title=\"Get current location\"\n        >\n          üìç Current Location\n        </button>\n        <div className=\"map-legend\">\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#007bff'}}></span>\n            Your Location\n          </span>\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#dc3545'}}></span>\n            Hospital\n          </span>\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#fd7e14'}}></span>\n            Urgent Care\n          </span>\n          <span className=\"legend-item\">\n            <span className=\"legend-color\" style={{backgroundColor: '#28a745'}}></span>\n            Pharmacy\n          </span>\n        </div>\n      </div>\n      <div ref={mapRef} className=\"map-display\" />\n    </div>\n  );\n};\n\nexport default MapView;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAG1D,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASvB,KAAM,CAAAC,OAA+B,CAAGC,IAAA,EAKlC,IALmC,CACvCC,YAAY,CACZC,SAAS,CAAG,EAAE,CACdC,gBAAgB,CAChBC,gBACF,CAAC,CAAAJ,IAAA,CACC,KAAM,CAAAK,MAAM,CAAGZ,MAAM,CAAiB,IAAI,CAAC,CAC3C,KAAM,CAACa,GAAG,CAAEC,MAAM,CAAC,CAAGb,QAAQ,CAAyB,IAAI,CAAC,CAC5D,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAuB,EAAE,CAAC,CAChE,KAAM,CAACgB,UAAU,CAAEC,aAAa,CAAC,CAAGjB,QAAQ,CAA4B,IAAI,CAAC,CAC7E,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAgB,IAAI,CAAC,CAEvDF,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAwB,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAIX,MAAM,CAACY,OAAO,CAAE,CAClBC,aAAa,CAAC,CAAC,CACjB,CAAC,IAAM,CACL;AACAC,UAAU,CAACH,kBAAkB,CAAE,EAAE,CAAC,CACpC,CACF,CAAC,CAED;AACA,KAAM,CAAAI,KAAK,CAAGD,UAAU,CAACH,kBAAkB,CAAE,GAAG,CAAC,CAEjD,MAAO,IAAMK,YAAY,CAACD,KAAK,CAAC,CAClC,CAAC,CAAE,EAAE,CAAC,CAAE;AAER5B,SAAS,CAAC,IAAM,CACd,GAAIc,GAAG,EAAIL,YAAY,CAAE,CACvBqB,kBAAkB,CAACrB,YAAY,CAAC,CAClC,CACF,CAAC,CAAE,CAACK,GAAG,CAAEL,YAAY,CAAC,CAAC,CAAE;AAEzBT,SAAS,CAAC,IAAM,CACd,GAAIc,GAAG,CAAE,CACPiB,qBAAqB,CAACrB,SAAS,CAAC,CAClC,CACF,CAAC,CAAE,CAACI,GAAG,CAAEJ,SAAS,CAAC,CAAC,CAAE;AAEtB,KAAM,CAAAgB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAM,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B,CACxDC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEL,MAAM,CAAG,SAAS,CAAG,SAAS,CAAC,CAC7EI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAExB,MAAM,CAACY,OAAO,CAAG,WAAW,CAAG,eAAe,CAAC,CAE/E,GAAI,CAACO,MAAM,CAAE,CACX,KAAM,IAAI,CAAAM,KAAK,CAAC,8DAA8D,CAAC,CACjF,CAEA,GAAI,CAACzB,MAAM,CAACY,OAAO,CAAE,CACnB,KAAM,IAAI,CAAAa,KAAK,CAAC,uDAAuD,CAAC,CAC1E,CAEA;AACA,GAAIC,MAAM,CAACC,MAAM,EAAID,MAAM,CAACC,MAAM,CAACC,IAAI,CAAE,CACvCL,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC1DK,iBAAiB,CAAC,CAAC,CACnB,OACF,CAEA;AACA,KAAM,CAAAC,MAAM,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAC/CF,MAAM,CAACG,GAAG,gDAAAC,MAAA,CAAkDf,MAAM,8BAA4B,CAC9FW,MAAM,CAACK,KAAK,CAAG,IAAI,CACnBL,MAAM,CAACM,KAAK,CAAG,IAAI,CAEnBN,MAAM,CAACO,MAAM,CAAG,IAAM,CACpBd,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CACrD;AACAV,UAAU,CAACe,iBAAiB,CAAE,GAAG,CAAC,CACpC,CAAC,CAEDC,MAAM,CAACQ,OAAO,CAAG,IAAM,CACrB,KAAM,IAAI,CAAAb,KAAK,CAAC,mCAAmC,CAAC,CACtD,CAAC,CAED;AACA,KAAM,CAAAc,cAAc,CAAGR,QAAQ,CAACS,aAAa,CAAC,oCAAoC,CAAC,CACnF,GAAI,CAACD,cAAc,CAAE,CACnBR,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACZ,MAAM,CAAC,CACjCP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC9C,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAChD,GAAIE,MAAM,CAACC,MAAM,EAAID,MAAM,CAACC,MAAM,CAACC,IAAI,CAAE,CACvCd,UAAU,CAACe,iBAAiB,CAAE,GAAG,CAAC,CACpC,CACF,CACF,CAAE,MAAOc,GAAG,CAAE,CACZpB,OAAO,CAACd,KAAK,CAAC,2BAA2B,CAAEkC,GAAG,CAAC,CAC/CjC,QAAQ,8BAAAwB,MAAA,CAA8BS,GAAG,CAAE,CAAC,CAC5CnC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAqB,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAI,CACF,GAAI,CAAC7B,MAAM,CAACY,OAAO,CAAE,CACnBW,OAAO,CAACd,KAAK,CAAC,kDAAkD,CAAC,CACjEC,QAAQ,CAAC,yBAAyB,CAAC,CACnCF,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA;AACA,KAAM,CAAAoC,eAAe,CAAGhD,YAAY,EAAI,CAAEiD,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,OAAQ,CAAC,CACvEvB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEoB,eAAe,CAAC,CAEzD,KAAM,CAAAG,WAAW,CAAG,GAAI,CAAApB,MAAM,CAACC,IAAI,CAACoB,GAAG,CAAChD,MAAM,CAACY,OAAO,CAAE,CACtDqC,MAAM,CAAEL,eAAe,CACvBM,IAAI,CAAE,EAAE,CACRC,MAAM,CAAE,CACN,CACEC,WAAW,CAAE,aAAa,CAC1BC,WAAW,CAAE,UAAU,CACvBC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChC,CAAC,CAEL,CAAC,CAAC,CAEF;AACAR,WAAW,CAACS,WAAW,CAAC,OAAO,CAAGC,KAAgC,EAAK,CACrE,GAAIA,KAAK,CAACC,MAAM,EAAI5D,gBAAgB,CAAE,CACpC,KAAM,CAAA6D,QAAkB,CAAG,CACzBd,GAAG,CAAEY,KAAK,CAACC,MAAM,CAACb,GAAG,CAAC,CAAC,CACvBC,GAAG,CAAEW,KAAK,CAACC,MAAM,CAACZ,GAAG,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAc,QAAQ,CAAG,GAAI,CAAAjC,MAAM,CAACC,IAAI,CAACiC,QAAQ,CAAC,CAAC,CAC3CD,QAAQ,CAACE,OAAO,CAAC,CAAEH,QAAQ,CAAEF,KAAK,CAACC,MAAO,CAAC,CAAE,CAACK,OAAO,CAAEC,MAAM,GAAK,CAChE,GAAIA,MAAM,GAAK,IAAI,EAAID,OAAO,EAAIA,OAAO,CAAC,CAAC,CAAC,CAAE,CAC5CJ,QAAQ,CAACM,OAAO,CAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,iBAAiB,CACjD,CACApE,gBAAgB,CAAC6D,QAAQ,CAAC,CAC5B,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEFpC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAChDtB,MAAM,CAAC6C,WAAW,CAAC,CACnBvC,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOmC,GAAG,CAAE,CACZpB,OAAO,CAACd,KAAK,CAAC,8BAA8B,CAAEkC,GAAG,CAAC,CAClDjC,QAAQ,0BAAAwB,MAAA,CAA0BS,GAAG,CAAE,CAAC,CACxCnC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAS,kBAAkB,CAAI0C,QAAkB,EAAK,CACjD,GAAI,CAAC1D,GAAG,CAAE,OAEV;AACA,GAAII,UAAU,CAAE,CACdA,UAAU,CAACH,MAAM,CAAC,IAAI,CAAC,CACzB,CAEA;AACA,KAAM,CAAAiE,MAAM,CAAG,GAAI,CAAAxC,MAAM,CAACC,IAAI,CAACwC,MAAM,CAAC,CACpCC,QAAQ,CAAEV,QAAQ,CAClB1D,GAAG,CAAEA,GAAG,CACRqE,KAAK,CAAE,eAAe,CACtBC,IAAI,CAAE,CACJC,GAAG,CAAE,mCAAmC,CAAGC,kBAAkB,8TAK5D,CAAC,CACFC,UAAU,CAAE,GAAI,CAAA/C,MAAM,CAACC,IAAI,CAAC+C,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACxCC,MAAM,CAAE,GAAI,CAAAjD,MAAM,CAACC,IAAI,CAACiD,KAAK,CAAC,EAAE,CAAE,EAAE,CACtC,CACF,CAAC,CAAC,CAEFvE,aAAa,CAAC6D,MAAM,CAAC,CAErB;AACAlE,GAAG,CAAC6E,SAAS,CAACnB,QAAQ,CAAC,CACzB,CAAC,CAED,KAAM,CAAAzC,qBAAqB,CAAIrB,SAA+B,EAAK,CACjE,GAAI,CAACI,GAAG,CAAE,OAEV;AACAE,OAAO,CAAC4E,OAAO,CAACZ,MAAM,EAAIA,MAAM,CAACjE,MAAM,CAAC,IAAI,CAAC,CAAC,CAE9C;AACA,KAAM,CAAA8E,UAAU,CAAGnF,SAAS,CAACI,GAAG,CAAC,CAACgF,QAAQ,CAAEC,KAAK,GAAK,CACpD,KAAM,CAAAf,MAAM,CAAG,GAAI,CAAAxC,MAAM,CAACC,IAAI,CAACwC,MAAM,CAAC,CACpCC,QAAQ,CAAEY,QAAQ,CAACtB,QAAQ,CAC3B1D,GAAG,CAAEA,GAAG,CACRqE,KAAK,CAAEW,QAAQ,CAACE,IAAI,CACpBZ,IAAI,CAAE,CACJC,GAAG,CAAEY,eAAe,CAACH,QAAQ,CAACI,IAAI,CAAC,CACnCX,UAAU,CAAE,GAAI,CAAA/C,MAAM,CAACC,IAAI,CAAC+C,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,CACxCC,MAAM,CAAE,GAAI,CAAAjD,MAAM,CAACC,IAAI,CAACiD,KAAK,CAAC,EAAE,CAAE,EAAE,CACtC,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAS,UAAU,CAAG,GAAI,CAAA3D,MAAM,CAACC,IAAI,CAAC2D,UAAU,CAAC,CAC5CC,OAAO,6DAAAtD,MAAA,CAEG+C,QAAQ,CAACE,IAAI,kDAAAjD,MAAA,CACS+C,QAAQ,CAACI,IAAI,oDAAAnD,MAAA,CACV+C,QAAQ,CAAChB,OAAO,uBAAA/B,MAAA,CAC7C+C,QAAQ,CAACQ,MAAM,gCAAAvD,MAAA,CAAkC,GAAG,CAACwD,MAAM,CAACC,IAAI,CAACC,KAAK,CAACX,QAAQ,CAACQ,MAAM,CAAC,CAAC,SAAS,EAAE,mBAAAvD,MAAA,CACnG+C,QAAQ,CAACY,QAAQ,kCAAA3D,MAAA,CAAoC+C,QAAQ,CAACY,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE,4DAAA5D,MAAA,CAC1D+C,QAAQ,CAACc,OAAO,EAAId,QAAQ,CAACe,EAAE,gHAK/E,CAAC,CAAC,CAEF7B,MAAM,CAACX,WAAW,CAAC,OAAO,CAAE,IAAM,CAChC8B,UAAU,CAACW,IAAI,CAAChG,GAAG,CAAEkE,MAAM,CAAC,CAC9B,CAAC,CAAC,CAEF,MAAO,CAAAA,MAAM,CACf,CAAC,CAAC,CAEF/D,UAAU,CAAC4E,UAAU,CAAC,CAEtB;AACCtD,MAAM,CAASwE,cAAc,CAAIC,UAAkB,EAAK,CACvD,KAAM,CAAAlB,QAAQ,CAAGpF,SAAS,CAACuG,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACN,OAAO,GAAKI,UAAU,EAAIE,CAAC,CAACL,EAAE,GAAKG,UAAU,CAAC,CACrF,GAAIlB,QAAQ,EAAIlF,gBAAgB,CAAE,CAChCA,gBAAgB,CAACkF,QAAQ,CAAC,CAC5B,CACF,CAAC,CAED;AACA,GAAID,UAAU,CAACsB,MAAM,CAAG,CAAC,CAAE,CACzB,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAA5E,MAAM,CAACC,IAAI,CAAC4E,YAAY,CAAC,CAAC,CAC7CxB,UAAU,CAACD,OAAO,CAACZ,MAAM,EAAI,CAC3B,KAAM,CAAAE,QAAQ,CAAGF,MAAM,CAACsC,WAAW,CAAC,CAAC,CACrC,GAAIpC,QAAQ,CAAEkC,MAAM,CAACG,MAAM,CAACrC,QAAQ,CAAC,CACvC,CAAC,CAAC,CAEF,GAAIhE,UAAU,CAAE,CACd,KAAM,CAAAsG,YAAY,CAAGtG,UAAU,CAACoG,WAAW,CAAC,CAAC,CAC7C,GAAIE,YAAY,CAAEJ,MAAM,CAACG,MAAM,CAACC,YAAY,CAAC,CAC/C,CAEA1G,GAAG,CAAC2G,SAAS,CAACL,MAAM,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAnB,eAAe,CAAIC,IAAY,EAAa,CAChD,KAAM,CAAAwB,SAAS,CAAGC,gBAAgB,CAACzB,IAAI,CAAC,CACxC,MAAO,oCAAsCZ,kBAAkB,+NAAAvC,MAAA,CAEoC2E,SAAS,2KAAA3E,MAAA,CAEvD2E,SAAS,6CAAA3E,MAAA,CAAsC6E,iBAAiB,CAAC1B,IAAI,CAAC,+BAE1H,CAAC,CACJ,CAAC,CAED,KAAM,CAAAyB,gBAAgB,CAAIzB,IAAY,EAAa,CACjD,OAAQA,IAAI,CAAC2B,WAAW,CAAC,CAAC,EACxB,IAAK,UAAU,CAAE,MAAO,SAAS,CACjC,IAAK,aAAa,CAAE,MAAO,SAAS,CACpC,IAAK,UAAU,CAAE,MAAO,SAAS,CACjC,IAAK,QAAQ,CAAE,MAAO,SAAS,CAC/B,IAAK,YAAY,CAAE,MAAO,SAAS,CACnC,QAAS,MAAO,SAAS,CAC3B,CACF,CAAC,CAED,KAAM,CAAAD,iBAAiB,CAAI1B,IAAY,EAAa,CAClD,OAAQA,IAAI,CAAC2B,WAAW,CAAC,CAAC,EACxB,IAAK,UAAU,CAAE,MAAO,GAAG,CAC3B,IAAK,aAAa,CAAE,MAAO,GAAG,CAC9B,IAAK,UAAU,CAAE,MAAO,GAAG,CAC3B,IAAK,QAAQ,CAAE,MAAO,GAAG,CACzB,IAAK,YAAY,CAAE,MAAO,GAAG,CAC7B,QAAS,MAAO,GAAG,CACrB,CACF,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAIC,SAAS,CAACC,WAAW,CAAE,CACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrC/C,QAAQ,EAAK,CACZ,KAAM,CAAAV,QAAkB,CAAG,CACzBd,GAAG,CAAEwB,QAAQ,CAACgD,MAAM,CAACC,QAAQ,CAC7BxE,GAAG,CAAEuB,QAAQ,CAACgD,MAAM,CAACE,SACvB,CAAC,CAED,GAAIzH,gBAAgB,CAAE,CACpBA,gBAAgB,CAAC6D,QAAQ,CAAC,CAC5B,CACF,CAAC,CACAlD,KAAK,EAAK,CACTC,QAAQ,uBAAAwB,MAAA,CAAuBzB,KAAK,CAAC+G,OAAO,CAAE,CAAC,CACjD,CAAC,CACD,CAAEC,OAAO,CAAE,KAAK,CAAEC,kBAAkB,CAAE,IAAK,CAC7C,CAAC,CACH,CAAC,IAAM,CACLhH,QAAQ,CAAC,8CAA8C,CAAC,CAC1D,CACF,CAAC,CAED,GAAIH,OAAO,CAAE,CACX,mBACEd,KAAA,QAAKkI,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BrI,IAAA,QAAKoI,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCpI,IAAA,MAAAqI,QAAA,CAAG,gBAAc,CAAG,CAAC,EAClB,CAAC,CAEV,CAEA,GAAInH,KAAK,CAAE,CACT,mBACEhB,KAAA,QAAKkI,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBnI,KAAA,MAAAmI,QAAA,EAAG,qBAAmB,CAACnH,KAAK,EAAI,CAAC,cACjClB,IAAA,WAAQsI,OAAO,CAAEA,CAAA,GAAMnG,MAAM,CAACiC,QAAQ,CAACmE,MAAM,CAAC,CAAE,CAAAF,QAAA,CAAC,OAEjD,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,mBACEnI,KAAA,QAAKkI,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BnI,KAAA,QAAKkI,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BrI,IAAA,WACEoI,SAAS,CAAC,cAAc,CACxBE,OAAO,CAAEZ,kBAAmB,CAC5B3C,KAAK,CAAC,sBAAsB,CAAAsD,QAAA,CAC7B,+BAED,CAAQ,CAAC,cACTnI,KAAA,QAAKkI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnI,KAAA,SAAMkI,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3BrI,IAAA,SAAMoI,SAAS,CAAC,cAAc,CAACI,KAAK,CAAE,CAACC,eAAe,CAAE,SAAS,CAAE,CAAO,CAAC,gBAE7E,EAAM,CAAC,cACPvI,KAAA,SAAMkI,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3BrI,IAAA,SAAMoI,SAAS,CAAC,cAAc,CAACI,KAAK,CAAE,CAACC,eAAe,CAAE,SAAS,CAAE,CAAO,CAAC,WAE7E,EAAM,CAAC,cACPvI,KAAA,SAAMkI,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3BrI,IAAA,SAAMoI,SAAS,CAAC,cAAc,CAACI,KAAK,CAAE,CAACC,eAAe,CAAE,SAAS,CAAE,CAAO,CAAC,cAE7E,EAAM,CAAC,cACPvI,KAAA,SAAMkI,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3BrI,IAAA,SAAMoI,SAAS,CAAC,cAAc,CAACI,KAAK,CAAE,CAACC,eAAe,CAAE,SAAS,CAAE,CAAO,CAAC,WAE7E,EAAM,CAAC,EACJ,CAAC,EACH,CAAC,cACNzI,IAAA,QAAK0I,GAAG,CAAEjI,MAAO,CAAC2H,SAAS,CAAC,aAAa,CAAE,CAAC,EACzC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}